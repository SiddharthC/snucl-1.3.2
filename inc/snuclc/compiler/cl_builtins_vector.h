/*****************************************************************************/
/*                                                                           */
/* Copyright (c) 2011-2013 Seoul National University.                        */
/* All rights reserved.                                                      */
/*                                                                           */
/* Redistribution and use in source and binary forms, with or without        */
/* modification, are permitted provided that the following conditions        */
/* are met:                                                                  */
/*   1. Redistributions of source code must retain the above copyright       */
/*      notice, this list of conditions and the following disclaimer.        */
/*   2. Redistributions in binary form must reproduce the above copyright    */
/*      notice, this list of conditions and the following disclaimer in the  */
/*      documentation and/or other materials provided with the distribution. */
/*   3. Neither the name of Seoul National University nor the names of its   */
/*      contributors may be used to endorse or promote products derived      */
/*      from this software without specific prior written permission.        */
/*                                                                           */
/* THIS SOFTWARE IS PROVIDED BY SEOUL NATIONAL UNIVERSITY "AS IS" AND ANY    */
/* EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED */
/* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE    */
/* DISCLAIMED. IN NO EVENT SHALL SEOUL NATIONAL UNIVERSITY BE LIABLE FOR ANY */
/* DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL        */
/* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS   */
/* OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)     */
/* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,       */
/* STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN  */
/* ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE          */
/* POSSIBILITY OF SUCH DAMAGE.                                               */
/*                                                                           */
/* Contact information:                                                      */
/*   Center for Manycore Programming                                         */
/*   Department of Computer Science and Engineering                          */
/*   Seoul National University, Seoul 151-744, Korea                         */
/*   http://aces.snu.ac.kr                                                   */
/*                                                                           */
/* Contributors:                                                             */
/*   Jungwon Kim, Sangmin Seo, Gangwon Jo, Jun Lee, Jeongho Nah,             */
/*   Jungho Park, Junghyun Kim, and Jaejin Lee                               */
/*                                                                           */
/*****************************************************************************/

/*****************************************************************************/
/* This file is based on the SNU-SAMSUNG OpenCL Compiler and is distributed  */
/* under GNU General Public License.                                         */
/* See LICENSE.SNU-SAMSUNG_OpenCL_C_Compiler.TXT for details.                */
/*****************************************************************************/

#ifndef __CL_BUILTINS_VECTOR_H__
#define __CL_BUILTINS_VECTOR_H__

#include "cl_types.h"

/* 6.12.7 Vector Data Load and Store Functions */
/* Table 6.15 Vector Data Load and Store Functions */
char2    vload2(size_t, const __global char *) __attribute__((overloadable));
char3    vload3(size_t, const __global char *) __attribute__((overloadable));
char4    vload4(size_t, const __global char *) __attribute__((overloadable));
char8    vload8(size_t, const __global char *) __attribute__((overloadable));
char16   vload16(size_t, const __global char *) __attribute__((overloadable));
char2    vload2(size_t, const __local char *) __attribute__((overloadable));
char3    vload3(size_t, const __local char *) __attribute__((overloadable));
char4    vload4(size_t, const __local char *) __attribute__((overloadable));
char8    vload8(size_t, const __local char *) __attribute__((overloadable));
char16   vload16(size_t, const __local char *) __attribute__((overloadable));
char2    vload2(size_t, const __constant char *) __attribute__((overloadable));
char3    vload3(size_t, const __constant char *) __attribute__((overloadable));
char4    vload4(size_t, const __constant char *) __attribute__((overloadable));
char8    vload8(size_t, const __constant char *) __attribute__((overloadable));
char16   vload16(size_t, const __constant char *) __attribute__((overloadable));
char2    vload2(size_t, const __private char *) __attribute__((overloadable));
char3    vload3(size_t, const __private char *) __attribute__((overloadable));
char4    vload4(size_t, const __private char *) __attribute__((overloadable));
char8    vload8(size_t, const __private char *) __attribute__((overloadable));
char16   vload16(size_t, const __private char *) __attribute__((overloadable));

uchar2   vload2(size_t, const __global uchar *) __attribute__((overloadable));
uchar3   vload3(size_t, const __global uchar *) __attribute__((overloadable));
uchar4   vload4(size_t, const __global uchar *) __attribute__((overloadable));
uchar8   vload8(size_t, const __global uchar *) __attribute__((overloadable));
uchar16  vload16(size_t, const __global uchar *) __attribute__((overloadable));
uchar2   vload2(size_t, const __local uchar *) __attribute__((overloadable));
uchar3   vload3(size_t, const __local uchar *) __attribute__((overloadable));
uchar4   vload4(size_t, const __local uchar *) __attribute__((overloadable));
uchar8   vload8(size_t, const __local uchar *) __attribute__((overloadable));
uchar16  vload16(size_t, const __local uchar *) __attribute__((overloadable));
uchar2   vload2(size_t, const __constant uchar *) __attribute__((overloadable));
uchar3   vload3(size_t, const __constant uchar *) __attribute__((overloadable));
uchar4   vload4(size_t, const __constant uchar *) __attribute__((overloadable));
uchar8   vload8(size_t, const __constant uchar *) __attribute__((overloadable));
uchar16  vload16(size_t, const __constant uchar *) __attribute__((overloadable));
uchar2   vload2(size_t, const __private uchar *) __attribute__((overloadable));
uchar3   vload3(size_t, const __private uchar *) __attribute__((overloadable));
uchar4   vload4(size_t, const __private uchar *) __attribute__((overloadable));
uchar8   vload8(size_t, const __private uchar *) __attribute__((overloadable));
uchar16  vload16(size_t, const __private uchar *) __attribute__((overloadable));

short2   vload2(size_t, const __global short *) __attribute__((overloadable));
short3   vload3(size_t, const __global short *) __attribute__((overloadable));
short4   vload4(size_t, const __global short *) __attribute__((overloadable));
short8   vload8(size_t, const __global short *) __attribute__((overloadable));
short16  vload16(size_t, const __global short *) __attribute__((overloadable));
short2   vload2(size_t, const __local short *) __attribute__((overloadable));
short3   vload3(size_t, const __local short *) __attribute__((overloadable));
short4   vload4(size_t, const __local short *) __attribute__((overloadable));
short8   vload8(size_t, const __local short *) __attribute__((overloadable));
short16  vload16(size_t, const __local short *) __attribute__((overloadable));
short2   vload2(size_t, const __constant short *) __attribute__((overloadable));
short3   vload3(size_t, const __constant short *) __attribute__((overloadable));
short4   vload4(size_t, const __constant short *) __attribute__((overloadable));
short8   vload8(size_t, const __constant short *) __attribute__((overloadable));
short16  vload16(size_t, const __constant short *) __attribute__((overloadable));
short2   vload2(size_t, const __private short *) __attribute__((overloadable));
short3   vload3(size_t, const __private short *) __attribute__((overloadable));
short4   vload4(size_t, const __private short *) __attribute__((overloadable));
short8   vload8(size_t, const __private short *) __attribute__((overloadable));
short16  vload16(size_t, const __private short *) __attribute__((overloadable));

ushort2  vload2(size_t, const __global ushort *) __attribute__((overloadable));
ushort3  vload3(size_t, const __global ushort *) __attribute__((overloadable));
ushort4  vload4(size_t, const __global ushort *) __attribute__((overloadable));
ushort8  vload8(size_t, const __global ushort *) __attribute__((overloadable));
ushort16 vload16(size_t, const __global ushort *) __attribute__((overloadable));
ushort2  vload2(size_t, const __local ushort *) __attribute__((overloadable));
ushort3  vload3(size_t, const __local ushort *) __attribute__((overloadable));
ushort4  vload4(size_t, const __local ushort *) __attribute__((overloadable));
ushort8  vload8(size_t, const __local ushort *) __attribute__((overloadable));
ushort16 vload16(size_t, const __local ushort *) __attribute__((overloadable));
ushort2  vload2(size_t, const __constant ushort *) __attribute__((overloadable));
ushort3  vload3(size_t, const __constant ushort *) __attribute__((overloadable));
ushort4  vload4(size_t, const __constant ushort *) __attribute__((overloadable));
ushort8  vload8(size_t, const __constant ushort *) __attribute__((overloadable));
ushort16 vload16(size_t, const __constant ushort *) __attribute__((overloadable));
ushort2  vload2(size_t, const __private ushort *) __attribute__((overloadable));
ushort3  vload3(size_t, const __private ushort *) __attribute__((overloadable));
ushort4  vload4(size_t, const __private ushort *) __attribute__((overloadable));
ushort8  vload8(size_t, const __private ushort *) __attribute__((overloadable));
ushort16 vload16(size_t, const __private ushort *) __attribute__((overloadable));

int2     vload2(size_t, const __global int *) __attribute__((overloadable));
int3     vload3(size_t, const __global int *) __attribute__((overloadable));
int4     vload4(size_t, const __global int *) __attribute__((overloadable));
int8     vload8(size_t, const __global int *) __attribute__((overloadable));
int16    vload16(size_t, const __global int *) __attribute__((overloadable));
int2     vload2(size_t, const __local int *) __attribute__((overloadable));
int3     vload3(size_t, const __local int *) __attribute__((overloadable));
int4     vload4(size_t, const __local int *) __attribute__((overloadable));
int8     vload8(size_t, const __local int *) __attribute__((overloadable));
int16    vload16(size_t, const __local int *) __attribute__((overloadable));
int2     vload2(size_t, const __constant int *) __attribute__((overloadable));
int3     vload3(size_t, const __constant int *) __attribute__((overloadable));
int4     vload4(size_t, const __constant int *) __attribute__((overloadable));
int8     vload8(size_t, const __constant int *) __attribute__((overloadable));
int16    vload16(size_t, const __constant int *) __attribute__((overloadable));
int2     vload2(size_t, const __private int *) __attribute__((overloadable));
int3     vload3(size_t, const __private int *) __attribute__((overloadable));
int4     vload4(size_t, const __private int *) __attribute__((overloadable));
int8     vload8(size_t, const __private int *) __attribute__((overloadable));
int16    vload16(size_t, const __private int *) __attribute__((overloadable));

uint2    vload2(size_t, const __global uint *) __attribute__((overloadable));
uint3    vload3(size_t, const __global uint *) __attribute__((overloadable));
uint4    vload4(size_t, const __global uint *) __attribute__((overloadable));
uint8    vload8(size_t, const __global uint *) __attribute__((overloadable));
uint16   vload16(size_t, const __global uint *) __attribute__((overloadable));
uint2    vload2(size_t, const __local uint *) __attribute__((overloadable));
uint3    vload3(size_t, const __local uint *) __attribute__((overloadable));
uint4    vload4(size_t, const __local uint *) __attribute__((overloadable));
uint8    vload8(size_t, const __local uint *) __attribute__((overloadable));
uint16   vload16(size_t, const __local uint *) __attribute__((overloadable));
uint2    vload2(size_t, const __constant uint *) __attribute__((overloadable));
uint3    vload3(size_t, const __constant uint *) __attribute__((overloadable));
uint4    vload4(size_t, const __constant uint *) __attribute__((overloadable));
uint8    vload8(size_t, const __constant uint *) __attribute__((overloadable));
uint16   vload16(size_t, const __constant uint *) __attribute__((overloadable));
uint2    vload2(size_t, const __private uint *) __attribute__((overloadable));
uint3    vload3(size_t, const __private uint *) __attribute__((overloadable));
uint4    vload4(size_t, const __private uint *) __attribute__((overloadable));
uint8    vload8(size_t, const __private uint *) __attribute__((overloadable));
uint16   vload16(size_t, const __private uint *) __attribute__((overloadable));

long2    vload2(size_t, const __global long *) __attribute__((overloadable));
long3    vload3(size_t, const __global long *) __attribute__((overloadable));
long4    vload4(size_t, const __global long *) __attribute__((overloadable));
long8    vload8(size_t, const __global long *) __attribute__((overloadable));
long16   vload16(size_t, const __global long *) __attribute__((overloadable));
long2    vload2(size_t, const __local long *) __attribute__((overloadable));
long3    vload3(size_t, const __local long *) __attribute__((overloadable));
long4    vload4(size_t, const __local long *) __attribute__((overloadable));
long8    vload8(size_t, const __local long *) __attribute__((overloadable));
long16   vload16(size_t, const __local long *) __attribute__((overloadable));
long2    vload2(size_t, const __constant long *) __attribute__((overloadable));
long3    vload3(size_t, const __constant long *) __attribute__((overloadable));
long4    vload4(size_t, const __constant long *) __attribute__((overloadable));
long8    vload8(size_t, const __constant long *) __attribute__((overloadable));
long16   vload16(size_t, const __constant long *) __attribute__((overloadable));
long2    vload2(size_t, const __private long *) __attribute__((overloadable));
long3    vload3(size_t, const __private long *) __attribute__((overloadable));
long4    vload4(size_t, const __private long *) __attribute__((overloadable));
long8    vload8(size_t, const __private long *) __attribute__((overloadable));
long16   vload16(size_t, const __private long *) __attribute__((overloadable));

ulong2   vload2(size_t, const __global ulong *) __attribute__((overloadable));
ulong3   vload3(size_t, const __global ulong *) __attribute__((overloadable));
ulong4   vload4(size_t, const __global ulong *) __attribute__((overloadable));
ulong8   vload8(size_t, const __global ulong *) __attribute__((overloadable));
ulong16  vload16(size_t, const __global ulong *) __attribute__((overloadable));
ulong2   vload2(size_t, const __local ulong *) __attribute__((overloadable));
ulong3   vload3(size_t, const __local ulong *) __attribute__((overloadable));
ulong4   vload4(size_t, const __local ulong *) __attribute__((overloadable));
ulong8   vload8(size_t, const __local ulong *) __attribute__((overloadable));
ulong16  vload16(size_t, const __local ulong *) __attribute__((overloadable));
ulong2   vload2(size_t, const __constant ulong *) __attribute__((overloadable));
ulong3   vload3(size_t, const __constant ulong *) __attribute__((overloadable));
ulong4   vload4(size_t, const __constant ulong *) __attribute__((overloadable));
ulong8   vload8(size_t, const __constant ulong *) __attribute__((overloadable));
ulong16  vload16(size_t, const __constant ulong *) __attribute__((overloadable));
ulong2   vload2(size_t, const __private ulong *) __attribute__((overloadable));
ulong3   vload3(size_t, const __private ulong *) __attribute__((overloadable));
ulong4   vload4(size_t, const __private ulong *) __attribute__((overloadable));
ulong8   vload8(size_t, const __private ulong *) __attribute__((overloadable));
ulong16  vload16(size_t, const __private ulong *) __attribute__((overloadable));

float2   vload2(size_t, const __global float *) __attribute__((overloadable));
float3   vload3(size_t, const __global float *) __attribute__((overloadable));
float4   vload4(size_t, const __global float *) __attribute__((overloadable));
float8   vload8(size_t, const __global float *) __attribute__((overloadable));
float16  vload16(size_t, const __global float *) __attribute__((overloadable));
float2   vload2(size_t, const __local float *) __attribute__((overloadable));
float3   vload3(size_t, const __local float *) __attribute__((overloadable));
float4   vload4(size_t, const __local float *) __attribute__((overloadable));
float8   vload8(size_t, const __local float *) __attribute__((overloadable));
float16  vload16(size_t, const __local float *) __attribute__((overloadable));
float2   vload2(size_t, const __constant float *) __attribute__((overloadable));
float3   vload3(size_t, const __constant float *) __attribute__((overloadable));
float4   vload4(size_t, const __constant float *) __attribute__((overloadable));
float8   vload8(size_t, const __constant float *) __attribute__((overloadable));
float16  vload16(size_t, const __constant float *) __attribute__((overloadable));
float2   vload2(size_t, const __private float *) __attribute__((overloadable));
float3   vload3(size_t, const __private float *) __attribute__((overloadable));
float4   vload4(size_t, const __private float *) __attribute__((overloadable));
float8   vload8(size_t, const __private float *) __attribute__((overloadable));
float16  vload16(size_t, const __private float *) __attribute__((overloadable));

double2  vload2(size_t, const __global double *) __attribute__((overloadable));
double3  vload3(size_t, const __global double *) __attribute__((overloadable));
double4  vload4(size_t, const __global double *) __attribute__((overloadable));
double8  vload8(size_t, const __global double *) __attribute__((overloadable));
double16 vload16(size_t, const __global double *) __attribute__((overloadable));
double2  vload2(size_t, const __local double *) __attribute__((overloadable));
double3  vload3(size_t, const __local double *) __attribute__((overloadable));
double4  vload4(size_t, const __local double *) __attribute__((overloadable));
double8  vload8(size_t, const __local double *) __attribute__((overloadable));
double16 vload16(size_t, const __local double *) __attribute__((overloadable));
double2  vload2(size_t, const __constant double *) __attribute__((overloadable));
double3  vload3(size_t, const __constant double *) __attribute__((overloadable));
double4  vload4(size_t, const __constant double *) __attribute__((overloadable));
double8  vload8(size_t, const __constant double *) __attribute__((overloadable));
double16 vload16(size_t, const __constant double *) __attribute__((overloadable));
double2  vload2(size_t, const __private double *) __attribute__((overloadable));
double3  vload3(size_t, const __private double *) __attribute__((overloadable));
double4  vload4(size_t, const __private double *) __attribute__((overloadable));
double8  vload8(size_t, const __private double *) __attribute__((overloadable));
double16 vload16(size_t, const __private double *) __attribute__((overloadable));

void     vstore2(char2, size_t, __global char *) __attribute__((overloadable));
void     vstore3(char3, size_t, __global char *) __attribute__((overloadable));
void     vstore4(char4, size_t, __global char *) __attribute__((overloadable));
void     vstore8(char8, size_t, __global char *) __attribute__((overloadable));
void     vstore16(char16, size_t, __global char *) __attribute__((overloadable));
void     vstore2(char2, size_t, __local char *) __attribute__((overloadable));
void     vstore3(char3, size_t, __local char *) __attribute__((overloadable));
void     vstore4(char4, size_t, __local char *) __attribute__((overloadable));
void     vstore8(char8, size_t, __local char *) __attribute__((overloadable));
void     vstore16(char16, size_t, __local char *) __attribute__((overloadable));
void     vstore2(char2, size_t, __private char *) __attribute__((overloadable));
void     vstore3(char3, size_t, __private char *) __attribute__((overloadable));
void     vstore4(char4, size_t, __private char *) __attribute__((overloadable));
void     vstore8(char8, size_t, __private char *) __attribute__((overloadable));
void     vstore16(char16, size_t, __private char *) __attribute__((overloadable));

void     vstore2(uchar2, size_t, __global uchar *) __attribute__((overloadable));
void     vstore3(uchar3, size_t, __global uchar *) __attribute__((overloadable));
void     vstore4(uchar4, size_t, __global uchar *) __attribute__((overloadable));
void     vstore8(uchar8, size_t, __global uchar *) __attribute__((overloadable));
void     vstore16(uchar16, size_t, __global uchar *) __attribute__((overloadable));
void     vstore2(uchar2, size_t, __local uchar *) __attribute__((overloadable));
void     vstore3(uchar3, size_t, __local uchar *) __attribute__((overloadable));
void     vstore4(uchar4, size_t, __local uchar *) __attribute__((overloadable));
void     vstore8(uchar8, size_t, __local uchar *) __attribute__((overloadable));
void     vstore16(uchar16, size_t, __local uchar *) __attribute__((overloadable));
void     vstore2(uchar2, size_t, __private uchar *) __attribute__((overloadable));
void     vstore3(uchar3, size_t, __private uchar *) __attribute__((overloadable));
void     vstore4(uchar4, size_t, __private uchar *) __attribute__((overloadable));
void     vstore8(uchar8, size_t, __private uchar *) __attribute__((overloadable));
void     vstore16(uchar16, size_t, __private uchar *) __attribute__((overloadable));

void     vstore2(short2, size_t, __global short *) __attribute__((overloadable));
void     vstore3(short3, size_t, __global short *) __attribute__((overloadable));
void     vstore4(short4, size_t, __global short *) __attribute__((overloadable));
void     vstore8(short8, size_t, __global short *) __attribute__((overloadable));
void     vstore16(short16, size_t, __global short *) __attribute__((overloadable));
void     vstore2(short2, size_t, __local short *) __attribute__((overloadable));
void     vstore3(short3, size_t, __local short *) __attribute__((overloadable));
void     vstore4(short4, size_t, __local short *) __attribute__((overloadable));
void     vstore8(short8, size_t, __local short *) __attribute__((overloadable));
void     vstore16(short16, size_t, __local short *) __attribute__((overloadable));
void     vstore2(short2, size_t, __private short *) __attribute__((overloadable));
void     vstore3(short3, size_t, __private short *) __attribute__((overloadable));
void     vstore4(short4, size_t, __private short *) __attribute__((overloadable));
void     vstore8(short8, size_t, __private short *) __attribute__((overloadable));
void     vstore16(short16, size_t, __private short *) __attribute__((overloadable));

void     vstore2(ushort2, size_t, __global ushort *) __attribute__((overloadable));
void     vstore3(ushort3, size_t, __global ushort *) __attribute__((overloadable));
void     vstore4(ushort4, size_t, __global ushort *) __attribute__((overloadable));
void     vstore8(ushort8, size_t, __global ushort *) __attribute__((overloadable));
void     vstore16(ushort16, size_t, __global ushort *) __attribute__((overloadable));
void     vstore2(ushort2, size_t, __local ushort *) __attribute__((overloadable));
void     vstore3(ushort3, size_t, __local ushort *) __attribute__((overloadable));
void     vstore4(ushort4, size_t, __local ushort *) __attribute__((overloadable));
void     vstore8(ushort8, size_t, __local ushort *) __attribute__((overloadable));
void     vstore16(ushort16, size_t, __local ushort *) __attribute__((overloadable));
void     vstore2(ushort2, size_t, __private ushort *) __attribute__((overloadable));
void     vstore3(ushort3, size_t, __private ushort *) __attribute__((overloadable));
void     vstore4(ushort4, size_t, __private ushort *) __attribute__((overloadable));
void     vstore8(ushort8, size_t, __private ushort *) __attribute__((overloadable));
void     vstore16(ushort16, size_t, __private ushort *) __attribute__((overloadable));

void     vstore2(int2, size_t, __global int *) __attribute__((overloadable));
void     vstore3(int3, size_t, __global int *) __attribute__((overloadable));
void     vstore4(int4, size_t, __global int *) __attribute__((overloadable));
void     vstore8(int8, size_t, __global int *) __attribute__((overloadable));
void     vstore16(int16, size_t, __global int *) __attribute__((overloadable));
void     vstore2(int2, size_t, __local int *) __attribute__((overloadable));
void     vstore3(int3, size_t, __local int *) __attribute__((overloadable));
void     vstore4(int4, size_t, __local int *) __attribute__((overloadable));
void     vstore8(int8, size_t, __local int *) __attribute__((overloadable));
void     vstore16(int16, size_t, __local int *) __attribute__((overloadable));
void     vstore2(int2, size_t, __private int *) __attribute__((overloadable));
void     vstore3(int3, size_t, __private int *) __attribute__((overloadable));
void     vstore4(int4, size_t, __private int *) __attribute__((overloadable));
void     vstore8(int8, size_t, __private int *) __attribute__((overloadable));
void     vstore16(int16, size_t, __private int *) __attribute__((overloadable));

void     vstore2(uint2, size_t, __global uint *) __attribute__((overloadable));
void     vstore3(uint3, size_t, __global uint *) __attribute__((overloadable));
void     vstore4(uint4, size_t, __global uint *) __attribute__((overloadable));
void     vstore8(uint8, size_t, __global uint *) __attribute__((overloadable));
void     vstore16(uint16, size_t, __global uint *) __attribute__((overloadable));
void     vstore2(uint2, size_t, __local uint *) __attribute__((overloadable));
void     vstore3(uint3, size_t, __local uint *) __attribute__((overloadable));
void     vstore4(uint4, size_t, __local uint *) __attribute__((overloadable));
void     vstore8(uint8, size_t, __local uint *) __attribute__((overloadable));
void     vstore16(uint16, size_t, __local uint *) __attribute__((overloadable));
void     vstore2(uint2, size_t, __private uint *) __attribute__((overloadable));
void     vstore3(uint3, size_t, __private uint *) __attribute__((overloadable));
void     vstore4(uint4, size_t, __private uint *) __attribute__((overloadable));
void     vstore8(uint8, size_t, __private uint *) __attribute__((overloadable));
void     vstore16(uint16, size_t, __private uint *) __attribute__((overloadable));

void     vstore2(long2, size_t, __global long *) __attribute__((overloadable));
void     vstore3(long3, size_t, __global long *) __attribute__((overloadable));
void     vstore4(long4, size_t, __global long *) __attribute__((overloadable));
void     vstore8(long8, size_t, __global long *) __attribute__((overloadable));
void     vstore16(long16, size_t, __global long *) __attribute__((overloadable));
void     vstore2(long2, size_t, __local long *) __attribute__((overloadable));
void     vstore3(long3, size_t, __local long *) __attribute__((overloadable));
void     vstore4(long4, size_t, __local long *) __attribute__((overloadable));
void     vstore8(long8, size_t, __local long *) __attribute__((overloadable));
void     vstore16(long16, size_t, __local long *) __attribute__((overloadable));
void     vstore2(long2, size_t, __private long *) __attribute__((overloadable));
void     vstore3(long3, size_t, __private long *) __attribute__((overloadable));
void     vstore4(long4, size_t, __private long *) __attribute__((overloadable));
void     vstore8(long8, size_t, __private long *) __attribute__((overloadable));
void     vstore16(long16, size_t, __private long *) __attribute__((overloadable));

void     vstore2(ulong2, size_t, __global ulong *) __attribute__((overloadable));
void     vstore3(ulong3, size_t, __global ulong *) __attribute__((overloadable));
void     vstore4(ulong4, size_t, __global ulong *) __attribute__((overloadable));
void     vstore8(ulong8, size_t, __global ulong *) __attribute__((overloadable));
void     vstore16(ulong16, size_t, __global ulong *) __attribute__((overloadable));
void     vstore2(ulong2, size_t, __local ulong *) __attribute__((overloadable));
void     vstore3(ulong3, size_t, __local ulong *) __attribute__((overloadable));
void     vstore4(ulong4, size_t, __local ulong *) __attribute__((overloadable));
void     vstore8(ulong8, size_t, __local ulong *) __attribute__((overloadable));
void     vstore16(ulong16, size_t, __local ulong *) __attribute__((overloadable));
void     vstore2(ulong2, size_t, __private ulong *) __attribute__((overloadable));
void     vstore3(ulong3, size_t, __private ulong *) __attribute__((overloadable));
void     vstore4(ulong4, size_t, __private ulong *) __attribute__((overloadable));
void     vstore8(ulong8, size_t, __private ulong *) __attribute__((overloadable));
void     vstore16(ulong16, size_t, __private ulong *) __attribute__((overloadable));

void     vstore2(float2, size_t, __global float *) __attribute__((overloadable));
void     vstore3(float3, size_t, __global float *) __attribute__((overloadable));
void     vstore4(float4, size_t, __global float *) __attribute__((overloadable));
void     vstore8(float8, size_t, __global float *) __attribute__((overloadable));
void     vstore16(float16, size_t, __global float *) __attribute__((overloadable));
void     vstore2(float2, size_t, __local float *) __attribute__((overloadable));
void     vstore3(float3, size_t, __local float *) __attribute__((overloadable));
void     vstore4(float4, size_t, __local float *) __attribute__((overloadable));
void     vstore8(float8, size_t, __local float *) __attribute__((overloadable));
void     vstore16(float16, size_t, __local float *) __attribute__((overloadable));
void     vstore2(float2, size_t, __private float *) __attribute__((overloadable));
void     vstore3(float3, size_t, __private float *) __attribute__((overloadable));
void     vstore4(float4, size_t, __private float *) __attribute__((overloadable));
void     vstore8(float8, size_t, __private float *) __attribute__((overloadable));
void     vstore16(float16, size_t, __private float *) __attribute__((overloadable));

void     vstore2(double2, size_t, __global double *) __attribute__((overloadable));
void     vstore3(double3, size_t, __global double *) __attribute__((overloadable));
void     vstore4(double4, size_t, __global double *) __attribute__((overloadable));
void     vstore8(double8, size_t, __global double *) __attribute__((overloadable));
void     vstore16(double16, size_t, __global double *) __attribute__((overloadable));
void     vstore2(double2, size_t, __local double *) __attribute__((overloadable));
void     vstore3(double3, size_t, __local double *) __attribute__((overloadable));
void     vstore4(double4, size_t, __local double *) __attribute__((overloadable));
void     vstore8(double8, size_t, __local double *) __attribute__((overloadable));
void     vstore16(double16, size_t, __local double *) __attribute__((overloadable));
void     vstore2(double2, size_t, __private double *) __attribute__((overloadable));
void     vstore3(double3, size_t, __private double *) __attribute__((overloadable));
void     vstore4(double4, size_t, __private double *) __attribute__((overloadable));
void     vstore8(double8, size_t, __private double *) __attribute__((overloadable));
void     vstore16(double16, size_t, __private double *) __attribute__((overloadable));

float    vload_half(size_t, const __global half *) __attribute__((overloadable));
float    vload_half(size_t, const __local half *) __attribute__((overloadable));
float    vload_half(size_t, const __constant half *) __attribute__((overloadable));
float    vload_half(size_t, const __private half *) __attribute__((overloadable));

float2   vload_half2(size_t, const __global half *) __attribute__((overloadable));
float3   vload_half3(size_t, const __global half *) __attribute__((overloadable));
float4   vload_half4(size_t, const __global half *) __attribute__((overloadable));
float8   vload_half8(size_t, const __global half *) __attribute__((overloadable));
float16  vload_half16(size_t, const __global half *) __attribute__((overloadable));
float2   vload_half2(size_t, const __local half *) __attribute__((overloadable));
float3   vload_half3(size_t, const __local half *) __attribute__((overloadable));
float4   vload_half4(size_t, const __local half *) __attribute__((overloadable));
float8   vload_half8(size_t, const __local half *) __attribute__((overloadable));
float16  vload_half16(size_t, const __local half *) __attribute__((overloadable));
float2   vload_half2(size_t, const __constant half *) __attribute__((overloadable));
float3   vload_half3(size_t, const __constant half *) __attribute__((overloadable));
float4   vload_half4(size_t, const __constant half *) __attribute__((overloadable));
float8   vload_half8(size_t, const __constant half *) __attribute__((overloadable));
float16  vload_half16(size_t, const __constant half *) __attribute__((overloadable));
float2   vload_half2(size_t, const __private half *) __attribute__((overloadable));
float3   vload_half3(size_t, const __private half *) __attribute__((overloadable));
float4   vload_half4(size_t, const __private half *) __attribute__((overloadable));
float8   vload_half8(size_t, const __private half *) __attribute__((overloadable));
float16  vload_half16(size_t, const __private half *) __attribute__((overloadable));

void     vstore_half(float, size_t, __global half *) __attribute__((overloadable));
void     vstore_half_rte(float, size_t, __global half *) __attribute__((overloadable));
void     vstore_half_rtz(float, size_t, __global half *) __attribute__((overloadable));
void     vstore_half_rtp(float, size_t, __global half *) __attribute__((overloadable));
void     vstore_half_rtn(float, size_t, __global half *) __attribute__((overloadable));
void     vstore_half(float, size_t, __local half *) __attribute__((overloadable));
void     vstore_half_rte(float, size_t, __local half *) __attribute__((overloadable));
void     vstore_half_rtz(float, size_t, __local half *) __attribute__((overloadable));
void     vstore_half_rtp(float, size_t, __local half *) __attribute__((overloadable));
void     vstore_half_rtn(float, size_t, __local half *) __attribute__((overloadable));
void     vstore_half(float, size_t, __private half *) __attribute__((overloadable));
void     vstore_half_rte(float, size_t, __private half *) __attribute__((overloadable));
void     vstore_half_rtz(float, size_t, __private half *) __attribute__((overloadable));
void     vstore_half_rtp(float, size_t, __private half *) __attribute__((overloadable));
void     vstore_half_rtn(float, size_t, __private half *) __attribute__((overloadable));

void     vstore_half2(float2, size_t, __global half *) __attribute__((overloadable));
void     vstore_half3(float3, size_t, __global half *) __attribute__((overloadable));
void     vstore_half4(float4, size_t, __global half *) __attribute__((overloadable));
void     vstore_half8(float8, size_t, __global half *) __attribute__((overloadable));
void     vstore_half16(float16, size_t, __global half *) __attribute__((overloadable));
void     vstore_half2_rte(float2, size_t, __global half *) __attribute__((overloadable));
void     vstore_half3_rte(float3, size_t, __global half *) __attribute__((overloadable));
void     vstore_half4_rte(float4, size_t, __global half *) __attribute__((overloadable));
void     vstore_half8_rte(float8, size_t, __global half *) __attribute__((overloadable));
void     vstore_half16_rte(float16, size_t, __global half *) __attribute__((overloadable));
void     vstore_half2_rtz(float2, size_t, __global half *) __attribute__((overloadable));
void     vstore_half3_rtz(float3, size_t, __global half *) __attribute__((overloadable));
void     vstore_half4_rtz(float4, size_t, __global half *) __attribute__((overloadable));
void     vstore_half8_rtz(float8, size_t, __global half *) __attribute__((overloadable));
void     vstore_half16_rtz(float16, size_t, __global half *) __attribute__((overloadable));
void     vstore_half2_rtz(float2, size_t, __global half *) __attribute__((overloadable));
void     vstore_half3_rtz(float3, size_t, __global half *) __attribute__((overloadable));
void     vstore_half4_rtz(float4, size_t, __global half *) __attribute__((overloadable));
void     vstore_half8_rtz(float8, size_t, __global half *) __attribute__((overloadable));
void     vstore_half16_rtz(float16, size_t, __global half *) __attribute__((overloadable));
void     vstore_half2_rtp(float2, size_t, __global half *) __attribute__((overloadable));
void     vstore_half3_rtp(float3, size_t, __global half *) __attribute__((overloadable));
void     vstore_half4_rtp(float4, size_t, __global half *) __attribute__((overloadable));
void     vstore_half8_rtp(float8, size_t, __global half *) __attribute__((overloadable));
void     vstore_half16_rtp(float16, size_t, __global half *) __attribute__((overloadable));
void     vstore_half2_rtn(float2, size_t, __global half *) __attribute__((overloadable));
void     vstore_half3_rtn(float3, size_t, __global half *) __attribute__((overloadable));
void     vstore_half4_rtn(float4, size_t, __global half *) __attribute__((overloadable));
void     vstore_half8_rtn(float8, size_t, __global half *) __attribute__((overloadable));
void     vstore_half16_rtn(float16, size_t, __global half *) __attribute__((overloadable));
void     vstore_half2(float2, size_t, __local half *) __attribute__((overloadable));
void     vstore_half3(float3, size_t, __local half *) __attribute__((overloadable));
void     vstore_half4(float4, size_t, __local half *) __attribute__((overloadable));
void     vstore_half8(float8, size_t, __local half *) __attribute__((overloadable));
void     vstore_half16(float16, size_t, __local half *) __attribute__((overloadable));
void     vstore_half2_rte(float2, size_t, __local half *) __attribute__((overloadable));
void     vstore_half3_rte(float3, size_t, __local half *) __attribute__((overloadable));
void     vstore_half4_rte(float4, size_t, __local half *) __attribute__((overloadable));
void     vstore_half8_rte(float8, size_t, __local half *) __attribute__((overloadable));
void     vstore_half16_rte(float16, size_t, __local half *) __attribute__((overloadable));
void     vstore_half2_rtz(float2, size_t, __local half *) __attribute__((overloadable));
void     vstore_half3_rtz(float3, size_t, __local half *) __attribute__((overloadable));
void     vstore_half4_rtz(float4, size_t, __local half *) __attribute__((overloadable));
void     vstore_half8_rtz(float8, size_t, __local half *) __attribute__((overloadable));
void     vstore_half16_rtz(float16, size_t, __local half *) __attribute__((overloadable));
void     vstore_half2_rtz(float2, size_t, __local half *) __attribute__((overloadable));
void     vstore_half3_rtz(float3, size_t, __local half *) __attribute__((overloadable));
void     vstore_half4_rtz(float4, size_t, __local half *) __attribute__((overloadable));
void     vstore_half8_rtz(float8, size_t, __local half *) __attribute__((overloadable));
void     vstore_half16_rtz(float16, size_t, __local half *) __attribute__((overloadable));
void     vstore_half2_rtp(float2, size_t, __local half *) __attribute__((overloadable));
void     vstore_half3_rtp(float3, size_t, __local half *) __attribute__((overloadable));
void     vstore_half4_rtp(float4, size_t, __local half *) __attribute__((overloadable));
void     vstore_half8_rtp(float8, size_t, __local half *) __attribute__((overloadable));
void     vstore_half16_rtp(float16, size_t, __local half *) __attribute__((overloadable));
void     vstore_half2_rtn(float2, size_t, __local half *) __attribute__((overloadable));
void     vstore_half3_rtn(float3, size_t, __local half *) __attribute__((overloadable));
void     vstore_half4_rtn(float4, size_t, __local half *) __attribute__((overloadable));
void     vstore_half8_rtn(float8, size_t, __local half *) __attribute__((overloadable));
void     vstore_half16_rtn(float16, size_t, __local half *) __attribute__((overloadable));
void     vstore_half2(float2, size_t, __private half *) __attribute__((overloadable));
void     vstore_half3(float3, size_t, __private half *) __attribute__((overloadable));
void     vstore_half4(float4, size_t, __private half *) __attribute__((overloadable));
void     vstore_half8(float8, size_t, __private half *) __attribute__((overloadable));
void     vstore_half16(float16, size_t, __private half *) __attribute__((overloadable));
void     vstore_half2_rte(float2, size_t, __private half *) __attribute__((overloadable));
void     vstore_half3_rte(float3, size_t, __private half *) __attribute__((overloadable));
void     vstore_half4_rte(float4, size_t, __private half *) __attribute__((overloadable));
void     vstore_half8_rte(float8, size_t, __private half *) __attribute__((overloadable));
void     vstore_half16_rte(float16, size_t, __private half *) __attribute__((overloadable));
void     vstore_half2_rtz(float2, size_t, __private half *) __attribute__((overloadable));
void     vstore_half3_rtz(float3, size_t, __private half *) __attribute__((overloadable));
void     vstore_half4_rtz(float4, size_t, __private half *) __attribute__((overloadable));
void     vstore_half8_rtz(float8, size_t, __private half *) __attribute__((overloadable));
void     vstore_half16_rtz(float16, size_t, __private half *) __attribute__((overloadable));
void     vstore_half2_rtz(float2, size_t, __private half *) __attribute__((overloadable));
void     vstore_half3_rtz(float3, size_t, __private half *) __attribute__((overloadable));
void     vstore_half4_rtz(float4, size_t, __private half *) __attribute__((overloadable));
void     vstore_half8_rtz(float8, size_t, __private half *) __attribute__((overloadable));
void     vstore_half16_rtz(float16, size_t, __private half *) __attribute__((overloadable));
void     vstore_half2_rtp(float2, size_t, __private half *) __attribute__((overloadable));
void     vstore_half3_rtp(float3, size_t, __private half *) __attribute__((overloadable));
void     vstore_half4_rtp(float4, size_t, __private half *) __attribute__((overloadable));
void     vstore_half8_rtp(float8, size_t, __private half *) __attribute__((overloadable));
void     vstore_half16_rtp(float16, size_t, __private half *) __attribute__((overloadable));
void     vstore_half2_rtn(float2, size_t, __private half *) __attribute__((overloadable));
void     vstore_half3_rtn(float3, size_t, __private half *) __attribute__((overloadable));
void     vstore_half4_rtn(float4, size_t, __private half *) __attribute__((overloadable));
void     vstore_half8_rtn(float8, size_t, __private half *) __attribute__((overloadable));
void     vstore_half16_rtn(float16, size_t, __private half *) __attribute__((overloadable));

void     vstore_half(double, size_t, __global half *) __attribute__((overloadable));
void     vstore_half_rte(double, size_t, __global half *) __attribute__((overloadable));
void     vstore_half_rtz(double, size_t, __global half *) __attribute__((overloadable));
void     vstore_half_rtp(double, size_t, __global half *) __attribute__((overloadable));
void     vstore_half_rtn(double, size_t, __global half *) __attribute__((overloadable));
void     vstore_half(double, size_t, __local half *) __attribute__((overloadable));
void     vstore_half_rte(double, size_t, __local half *) __attribute__((overloadable));
void     vstore_half_rtz(double, size_t, __local half *) __attribute__((overloadable));
void     vstore_half_rtp(double, size_t, __local half *) __attribute__((overloadable));
void     vstore_half_rtn(double, size_t, __local half *) __attribute__((overloadable));
void     vstore_half(double, size_t, __private half *) __attribute__((overloadable));
void     vstore_half_rte(double, size_t, __private half *) __attribute__((overloadable));
void     vstore_half_rtz(double, size_t, __private half *) __attribute__((overloadable));
void     vstore_half_rtp(double, size_t, __private half *) __attribute__((overloadable));
void     vstore_half_rtn(double, size_t, __private half *) __attribute__((overloadable));

void     vstore_half2(double2, size_t, __global half *) __attribute__((overloadable));
void     vstore_half3(double3, size_t, __global half *) __attribute__((overloadable));
void     vstore_half4(double4, size_t, __global half *) __attribute__((overloadable));
void     vstore_half8(double8, size_t, __global half *) __attribute__((overloadable));
void     vstore_half16(double16, size_t, __global half *) __attribute__((overloadable));
void     vstore_half2_rte(double2, size_t, __global half *) __attribute__((overloadable));
void     vstore_half3_rte(double3, size_t, __global half *) __attribute__((overloadable));
void     vstore_half4_rte(double4, size_t, __global half *) __attribute__((overloadable));
void     vstore_half8_rte(double8, size_t, __global half *) __attribute__((overloadable));
void     vstore_half16_rte(double16, size_t, __global half *) __attribute__((overloadable));
void     vstore_half2_rtz(double2, size_t, __global half *) __attribute__((overloadable));
void     vstore_half3_rtz(double3, size_t, __global half *) __attribute__((overloadable));
void     vstore_half4_rtz(double4, size_t, __global half *) __attribute__((overloadable));
void     vstore_half8_rtz(double8, size_t, __global half *) __attribute__((overloadable));
void     vstore_half16_rtz(double16, size_t, __global half *) __attribute__((overloadable));
void     vstore_half2_rtz(double2, size_t, __global half *) __attribute__((overloadable));
void     vstore_half3_rtz(double3, size_t, __global half *) __attribute__((overloadable));
void     vstore_half4_rtz(double4, size_t, __global half *) __attribute__((overloadable));
void     vstore_half8_rtz(double8, size_t, __global half *) __attribute__((overloadable));
void     vstore_half16_rtz(double16, size_t, __global half *) __attribute__((overloadable));
void     vstore_half2_rtp(double2, size_t, __global half *) __attribute__((overloadable));
void     vstore_half3_rtp(double3, size_t, __global half *) __attribute__((overloadable));
void     vstore_half4_rtp(double4, size_t, __global half *) __attribute__((overloadable));
void     vstore_half8_rtp(double8, size_t, __global half *) __attribute__((overloadable));
void     vstore_half16_rtp(double16, size_t, __global half *) __attribute__((overloadable));
void     vstore_half2_rtn(double2, size_t, __global half *) __attribute__((overloadable));
void     vstore_half3_rtn(double3, size_t, __global half *) __attribute__((overloadable));
void     vstore_half4_rtn(double4, size_t, __global half *) __attribute__((overloadable));
void     vstore_half8_rtn(double8, size_t, __global half *) __attribute__((overloadable));
void     vstore_half16_rtn(double16, size_t, __global half *) __attribute__((overloadable));
void     vstore_half2(double2, size_t, __local half *) __attribute__((overloadable));
void     vstore_half3(double3, size_t, __local half *) __attribute__((overloadable));
void     vstore_half4(double4, size_t, __local half *) __attribute__((overloadable));
void     vstore_half8(double8, size_t, __local half *) __attribute__((overloadable));
void     vstore_half16(double16, size_t, __local half *) __attribute__((overloadable));
void     vstore_half2_rte(double2, size_t, __local half *) __attribute__((overloadable));
void     vstore_half3_rte(double3, size_t, __local half *) __attribute__((overloadable));
void     vstore_half4_rte(double4, size_t, __local half *) __attribute__((overloadable));
void     vstore_half8_rte(double8, size_t, __local half *) __attribute__((overloadable));
void     vstore_half16_rte(double16, size_t, __local half *) __attribute__((overloadable));
void     vstore_half2_rtz(double2, size_t, __local half *) __attribute__((overloadable));
void     vstore_half3_rtz(double3, size_t, __local half *) __attribute__((overloadable));
void     vstore_half4_rtz(double4, size_t, __local half *) __attribute__((overloadable));
void     vstore_half8_rtz(double8, size_t, __local half *) __attribute__((overloadable));
void     vstore_half16_rtz(double16, size_t, __local half *) __attribute__((overloadable));
void     vstore_half2_rtz(double2, size_t, __local half *) __attribute__((overloadable));
void     vstore_half3_rtz(double3, size_t, __local half *) __attribute__((overloadable));
void     vstore_half4_rtz(double4, size_t, __local half *) __attribute__((overloadable));
void     vstore_half8_rtz(double8, size_t, __local half *) __attribute__((overloadable));
void     vstore_half16_rtz(double16, size_t, __local half *) __attribute__((overloadable));
void     vstore_half2_rtp(double2, size_t, __local half *) __attribute__((overloadable));
void     vstore_half3_rtp(double3, size_t, __local half *) __attribute__((overloadable));
void     vstore_half4_rtp(double4, size_t, __local half *) __attribute__((overloadable));
void     vstore_half8_rtp(double8, size_t, __local half *) __attribute__((overloadable));
void     vstore_half16_rtp(double16, size_t, __local half *) __attribute__((overloadable));
void     vstore_half2_rtn(double2, size_t, __local half *) __attribute__((overloadable));
void     vstore_half3_rtn(double3, size_t, __local half *) __attribute__((overloadable));
void     vstore_half4_rtn(double4, size_t, __local half *) __attribute__((overloadable));
void     vstore_half8_rtn(double8, size_t, __local half *) __attribute__((overloadable));
void     vstore_half16_rtn(double16, size_t, __local half *) __attribute__((overloadable));
void     vstore_half2(double2, size_t, __private half *) __attribute__((overloadable));
void     vstore_half3(double3, size_t, __private half *) __attribute__((overloadable));
void     vstore_half4(double4, size_t, __private half *) __attribute__((overloadable));
void     vstore_half8(double8, size_t, __private half *) __attribute__((overloadable));
void     vstore_half16(double16, size_t, __private half *) __attribute__((overloadable));
void     vstore_half2_rte(double2, size_t, __private half *) __attribute__((overloadable));
void     vstore_half3_rte(double3, size_t, __private half *) __attribute__((overloadable));
void     vstore_half4_rte(double4, size_t, __private half *) __attribute__((overloadable));
void     vstore_half8_rte(double8, size_t, __private half *) __attribute__((overloadable));
void     vstore_half16_rte(double16, size_t, __private half *) __attribute__((overloadable));
void     vstore_half2_rtz(double2, size_t, __private half *) __attribute__((overloadable));
void     vstore_half3_rtz(double3, size_t, __private half *) __attribute__((overloadable));
void     vstore_half4_rtz(double4, size_t, __private half *) __attribute__((overloadable));
void     vstore_half8_rtz(double8, size_t, __private half *) __attribute__((overloadable));
void     vstore_half16_rtz(double16, size_t, __private half *) __attribute__((overloadable));
void     vstore_half2_rtz(double2, size_t, __private half *) __attribute__((overloadable));
void     vstore_half3_rtz(double3, size_t, __private half *) __attribute__((overloadable));
void     vstore_half4_rtz(double4, size_t, __private half *) __attribute__((overloadable));
void     vstore_half8_rtz(double8, size_t, __private half *) __attribute__((overloadable));
void     vstore_half16_rtz(double16, size_t, __private half *) __attribute__((overloadable));
void     vstore_half2_rtp(double2, size_t, __private half *) __attribute__((overloadable));
void     vstore_half3_rtp(double3, size_t, __private half *) __attribute__((overloadable));
void     vstore_half4_rtp(double4, size_t, __private half *) __attribute__((overloadable));
void     vstore_half8_rtp(double8, size_t, __private half *) __attribute__((overloadable));
void     vstore_half16_rtp(double16, size_t, __private half *) __attribute__((overloadable));
void     vstore_half2_rtn(double2, size_t, __private half *) __attribute__((overloadable));
void     vstore_half3_rtn(double3, size_t, __private half *) __attribute__((overloadable));
void     vstore_half4_rtn(double4, size_t, __private half *) __attribute__((overloadable));
void     vstore_half8_rtn(double8, size_t, __private half *) __attribute__((overloadable));
void     vstore_half16_rtn(double16, size_t, __private half *) __attribute__((overloadable));

float    vloada_half(size_t, const __global half *) __attribute__((overloadable));
float2   vloada_half2(size_t, const __global half *) __attribute__((overloadable));
float3   vloada_half3(size_t, const __global half *) __attribute__((overloadable));
float4   vloada_half4(size_t, const __global half *) __attribute__((overloadable));
float8   vloada_half8(size_t, const __global half *) __attribute__((overloadable));
float16  vloada_half16(size_t, const __global half *) __attribute__((overloadable));
float    vloada_half(size_t, const __local half *) __attribute__((overloadable));
float2   vloada_half2(size_t, const __local half *) __attribute__((overloadable));
float3   vloada_half3(size_t, const __local half *) __attribute__((overloadable));
float4   vloada_half4(size_t, const __local half *) __attribute__((overloadable));
float8   vloada_half8(size_t, const __local half *) __attribute__((overloadable));
float16  vloada_half16(size_t, const __local half *) __attribute__((overloadable));
float    vloada_half(size_t, const __constant half *) __attribute__((overloadable));
float2   vloada_half2(size_t, const __constant half *) __attribute__((overloadable));
float3   vloada_half3(size_t, const __constant half *) __attribute__((overloadable));
float4   vloada_half4(size_t, const __constant half *) __attribute__((overloadable));
float8   vloada_half8(size_t, const __constant half *) __attribute__((overloadable));
float16  vloada_half16(size_t, const __constant half *) __attribute__((overloadable));
float    vloada_half(size_t, const __private half *) __attribute__((overloadable));
float2   vloada_half2(size_t, const __private half *) __attribute__((overloadable));
float3   vloada_half3(size_t, const __private half *) __attribute__((overloadable));
float4   vloada_half4(size_t, const __private half *) __attribute__((overloadable));
float8   vloada_half8(size_t, const __private half *) __attribute__((overloadable));
float16  vloada_half16(size_t, const __private half *) __attribute__((overloadable));

void     vstorea_half(float, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half2(float2, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half3(float3, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half4(float4, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half8(float8, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half16(float16, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half_rte(float, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half2_rte(float2, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half3_rte(float3, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half4_rte(float4, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half8_rte(float8, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half16_rte(float16, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half_rtz(float, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half2_rtz(float2, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half3_rtz(float3, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half4_rtz(float4, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half8_rtz(float8, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half16_rtz(float16, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half_rtz(float, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half2_rtz(float2, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half3_rtz(float3, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half4_rtz(float4, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half8_rtz(float8, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half16_rtz(float16, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half_rtp(float, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half2_rtp(float2, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half3_rtp(float3, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half4_rtp(float4, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half8_rtp(float8, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half16_rtp(float16, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half_rtn(float, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half2_rtn(float2, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half2_rtn(float2, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half3_rtn(float3, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half4_rtn(float4, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half8_rtn(float8, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half16_rtn(float16, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half(float, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half2(float2, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half3(float3, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half4(float4, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half8(float8, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half16(float16, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half_rte(float, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half2_rte(float2, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half3_rte(float3, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half4_rte(float4, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half8_rte(float8, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half16_rte(float16, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half_rtz(float, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half2_rtz(float2, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half3_rtz(float3, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half4_rtz(float4, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half8_rtz(float8, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half16_rtz(float16, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half_rtz(float, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half2_rtz(float2, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half3_rtz(float3, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half4_rtz(float4, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half8_rtz(float8, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half16_rtz(float16, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half_rtp(float, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half2_rtp(float2, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half3_rtp(float3, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half4_rtp(float4, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half8_rtp(float8, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half16_rtp(float16, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half_rtn(float, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half2_rtn(float2, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half3_rtn(float3, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half4_rtn(float4, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half8_rtn(float8, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half16_rtn(float16, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half(float, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half2(float2, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half3(float3, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half4(float4, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half8(float8, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half16(float16, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half_rte(float, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half2_rte(float2, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half3_rte(float3, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half4_rte(float4, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half8_rte(float8, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half16_rte(float16, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half_rtz(float, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half2_rtz(float2, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half3_rtz(float3, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half4_rtz(float4, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half8_rtz(float8, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half16_rtz(float16, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half_rtz(float, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half2_rtz(float2, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half3_rtz(float3, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half4_rtz(float4, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half8_rtz(float8, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half16_rtz(float16, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half_rtp(float, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half2_rtp(float2, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half3_rtp(float3, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half4_rtp(float4, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half8_rtp(float8, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half16_rtp(float16, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half_rtn(float, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half2_rtn(float2, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half3_rtn(float3, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half4_rtn(float4, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half8_rtn(float8, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half16_rtn(float16, size_t, __private half *) __attribute__((overloadable));

void     vstorea_half(double, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half2(double2, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half3(double3, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half4(double4, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half8(double8, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half16(double16, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half_rte(double, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half2_rte(double2, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half3_rte(double3, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half4_rte(double4, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half8_rte(double8, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half16_rte(double16, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half_rtz(double, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half2_rtz(double2, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half3_rtz(double3, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half4_rtz(double4, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half8_rtz(double8, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half16_rtz(double16, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half_rtz(double, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half2_rtz(double2, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half3_rtz(double3, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half4_rtz(double4, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half8_rtz(double8, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half16_rtz(double16, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half_rtp(double, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half2_rtp(double2, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half3_rtp(double3, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half4_rtp(double4, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half8_rtp(double8, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half16_rtp(double16, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half_rtn(double, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half2_rtn(double2, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half2_rtn(double2, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half3_rtn(double3, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half4_rtn(double4, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half8_rtn(double8, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half16_rtn(double16, size_t, __global half *) __attribute__((overloadable));
void     vstorea_half(double, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half2(double2, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half3(double3, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half4(double4, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half8(double8, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half16(double16, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half_rte(double, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half2_rte(double2, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half3_rte(double3, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half4_rte(double4, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half8_rte(double8, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half16_rte(double16, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half_rtz(double, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half2_rtz(double2, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half3_rtz(double3, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half4_rtz(double4, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half8_rtz(double8, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half16_rtz(double16, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half_rtz(double, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half2_rtz(double2, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half3_rtz(double3, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half4_rtz(double4, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half8_rtz(double8, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half16_rtz(double16, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half_rtp(double, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half2_rtp(double2, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half3_rtp(double3, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half4_rtp(double4, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half8_rtp(double8, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half16_rtp(double16, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half_rtn(double, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half2_rtn(double2, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half3_rtn(double3, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half4_rtn(double4, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half8_rtn(double8, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half16_rtn(double16, size_t, __local half *) __attribute__((overloadable));
void     vstorea_half(double, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half2(double2, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half3(double3, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half4(double4, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half8(double8, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half16(double16, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half_rte(double, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half2_rte(double2, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half3_rte(double3, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half4_rte(double4, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half8_rte(double8, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half16_rte(double16, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half_rtz(double, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half2_rtz(double2, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half3_rtz(double3, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half4_rtz(double4, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half8_rtz(double8, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half16_rtz(double16, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half_rtz(double, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half2_rtz(double2, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half3_rtz(double3, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half4_rtz(double4, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half8_rtz(double8, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half16_rtz(double16, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half_rtp(double, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half2_rtp(double2, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half3_rtp(double3, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half4_rtp(double4, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half8_rtp(double8, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half16_rtp(double16, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half_rtn(double, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half2_rtn(double2, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half3_rtn(double3, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half4_rtn(double4, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half8_rtn(double8, size_t, __private half *) __attribute__((overloadable));
void     vstorea_half16_rtn(double16, size_t, __private half *) __attribute__((overloadable));

#endif //__CL_BUILTINS_VECTOR_H__
