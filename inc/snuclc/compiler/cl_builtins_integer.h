/*****************************************************************************/
/*                                                                           */
/* Copyright (c) 2011-2013 Seoul National University.                        */
/* All rights reserved.                                                      */
/*                                                                           */
/* Redistribution and use in source and binary forms, with or without        */
/* modification, are permitted provided that the following conditions        */
/* are met:                                                                  */
/*   1. Redistributions of source code must retain the above copyright       */
/*      notice, this list of conditions and the following disclaimer.        */
/*   2. Redistributions in binary form must reproduce the above copyright    */
/*      notice, this list of conditions and the following disclaimer in the  */
/*      documentation and/or other materials provided with the distribution. */
/*   3. Neither the name of Seoul National University nor the names of its   */
/*      contributors may be used to endorse or promote products derived      */
/*      from this software without specific prior written permission.        */
/*                                                                           */
/* THIS SOFTWARE IS PROVIDED BY SEOUL NATIONAL UNIVERSITY "AS IS" AND ANY    */
/* EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED */
/* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE    */
/* DISCLAIMED. IN NO EVENT SHALL SEOUL NATIONAL UNIVERSITY BE LIABLE FOR ANY */
/* DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL        */
/* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS   */
/* OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)     */
/* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,       */
/* STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN  */
/* ANY WAY OUT OF THE USE OF THIS  SOFTWARE, EVEN IF ADVISED OF THE          */
/* POSSIBILITY OF SUCH DAMAGE.                                               */
/*                                                                           */
/* Contact information:                                                      */
/*   Center for Manycore Programming                                         */
/*   Department of Computer Science and Engineering                          */
/*   Seoul National University, Seoul 151-744, Korea                         */
/*   http://aces.snu.ac.kr                                                   */
/*                                                                           */
/* Contributors:                                                             */
/*   Jungwon Kim, Sangmin Seo, Gangwon Jo, Jun Lee, Jeongho Nah,             */
/*   Jungho Park, Junghyun Kim, and Jaejin Lee                               */
/*                                                                           */
/*****************************************************************************/

/*****************************************************************************/
/* This file is based on the SNU-SAMSUNG OpenCL Compiler and is distributed  */
/* under GNU General Public License.                                         */
/* See LICENSE.SNU-SAMSUNG_OpenCL_C_Compiler.TXT for details.                */
/*****************************************************************************/

#ifndef __CL_BUILTINS_INTEGER_H__
#define __CL_BUILTINS_INTEGER_H__

#include "cl_types.h"

/* 6.12.3 Integer Functions */
/* Table 6.10 Scalar and Vector Integer Arguement Built-in Functions */
uchar    abs(char) __attribute__((overloadable));
uchar2   abs(char2) __attribute__((overloadable));
uchar3   abs(char3) __attribute__((overloadable));
uchar4   abs(char4) __attribute__((overloadable));
uchar8   abs(char8) __attribute__((overloadable));
uchar16  abs(char16) __attribute__((overloadable));
ushort   abs(short) __attribute__((overloadable));
ushort2  abs(short2) __attribute__((overloadable));
ushort3  abs(short3) __attribute__((overloadable));
ushort4  abs(short4) __attribute__((overloadable));
ushort8  abs(short8) __attribute__((overloadable));
ushort16 abs(short16) __attribute__((overloadable));
uint     abs(int) __attribute__((overloadable));
uint2    abs(int2) __attribute__((overloadable));
uint3    abs(int3) __attribute__((overloadable));
uint4    abs(int4) __attribute__((overloadable));
uint8    abs(int8) __attribute__((overloadable));
uint16   abs(int16) __attribute__((overloadable));
ulong    abs(long) __attribute__((overloadable));
ulong2   abs(long2) __attribute__((overloadable));
ulong3   abs(long3) __attribute__((overloadable));
ulong4   abs(long4) __attribute__((overloadable));
ulong8   abs(long8) __attribute__((overloadable));
ulong16  abs(long16) __attribute__((overloadable));
uchar    abs(uchar) __attribute__((overloadable));
uchar2   abs(uchar2) __attribute__((overloadable));
uchar3   abs(uchar3) __attribute__((overloadable));
uchar4   abs(uchar4) __attribute__((overloadable));
uchar8   abs(uchar8) __attribute__((overloadable));
uchar16  abs(uchar16) __attribute__((overloadable));
ushort   abs(ushort) __attribute__((overloadable));
ushort2  abs(ushort2) __attribute__((overloadable));
ushort3  abs(ushort3) __attribute__((overloadable));
ushort4  abs(ushort4) __attribute__((overloadable));
ushort8  abs(ushort8) __attribute__((overloadable));
ushort16 abs(ushort16) __attribute__((overloadable));
uint     abs(uint) __attribute__((overloadable));
uint2    abs(uint2) __attribute__((overloadable));
uint3    abs(uint3) __attribute__((overloadable));
uint4    abs(uint4) __attribute__((overloadable));
uint8    abs(uint8) __attribute__((overloadable));
uint16   abs(uint16) __attribute__((overloadable));
ulong    abs(ulong) __attribute__((overloadable));
ulong2   abs(ulong2) __attribute__((overloadable));
ulong3   abs(ulong3) __attribute__((overloadable));
ulong4   abs(ulong4) __attribute__((overloadable));
ulong8   abs(ulong8) __attribute__((overloadable));
ulong16  abs(ulong16) __attribute__((overloadable));

uchar    abs_diff(char, char) __attribute__((overloadable));
uchar2   abs_diff(char2, char2) __attribute__((overloadable));
uchar3   abs_diff(char3, char3) __attribute__((overloadable));
uchar4   abs_diff(char4, char4) __attribute__((overloadable));
uchar8   abs_diff(char8, char8) __attribute__((overloadable));
uchar16  abs_diff(char16, char16) __attribute__((overloadable));
ushort   abs_diff(short, short) __attribute__((overloadable));
ushort2  abs_diff(short2, short2) __attribute__((overloadable));
ushort3  abs_diff(short3, short3) __attribute__((overloadable));
ushort4  abs_diff(short4, short4) __attribute__((overloadable));
ushort8  abs_diff(short8, short8) __attribute__((overloadable));
ushort16 abs_diff(short16, short16) __attribute__((overloadable));
uint     abs_diff(int, int) __attribute__((overloadable));
uint2    abs_diff(int2, int2) __attribute__((overloadable));
uint3    abs_diff(int3, int3) __attribute__((overloadable));
uint4    abs_diff(int4, int4) __attribute__((overloadable));
uint8    abs_diff(int8, int8) __attribute__((overloadable));
uint16   abs_diff(int16, int16) __attribute__((overloadable));
ulong    abs_diff(long, long) __attribute__((overloadable));
ulong2   abs_diff(long2, long2) __attribute__((overloadable));
ulong3   abs_diff(long3, long3) __attribute__((overloadable));
ulong4   abs_diff(long4, long4) __attribute__((overloadable));
ulong8   abs_diff(long8, long8) __attribute__((overloadable));
ulong16  abs_diff(long16, long16) __attribute__((overloadable));
uchar    abs_diff(uchar, uchar) __attribute__((overloadable));
uchar2   abs_diff(uchar2, uchar2) __attribute__((overloadable));
uchar3   abs_diff(uchar3, uchar3) __attribute__((overloadable));
uchar4   abs_diff(uchar4, uchar4) __attribute__((overloadable));
uchar8   abs_diff(uchar8, uchar8) __attribute__((overloadable));
uchar16  abs_diff(uchar16, uchar16) __attribute__((overloadable));
ushort   abs_diff(ushort, ushort) __attribute__((overloadable));
ushort2  abs_diff(ushort2, ushort2) __attribute__((overloadable));
ushort3  abs_diff(ushort3, ushort3) __attribute__((overloadable));
ushort4  abs_diff(ushort4, ushort4) __attribute__((overloadable));
ushort8  abs_diff(ushort8, ushort8) __attribute__((overloadable));
ushort16 abs_diff(ushort16, ushort16) __attribute__((overloadable));
uint     abs_diff(uint, uint) __attribute__((overloadable));
uint2    abs_diff(uint2, uint2) __attribute__((overloadable));
uint3    abs_diff(uint3, uint3) __attribute__((overloadable));
uint4    abs_diff(uint4, uint4) __attribute__((overloadable));
uint8    abs_diff(uint8, uint8) __attribute__((overloadable));
uint16   abs_diff(uint16, uint16) __attribute__((overloadable));
ulong    abs_diff(ulong, ulong) __attribute__((overloadable));
ulong2   abs_diff(ulong2, ulong2) __attribute__((overloadable));
ulong3   abs_diff(ulong3, ulong3) __attribute__((overloadable));
ulong4   abs_diff(ulong4, ulong4) __attribute__((overloadable));
ulong8   abs_diff(ulong8, ulong8) __attribute__((overloadable));
ulong16  abs_diff(ulong16, ulong16) __attribute__((overloadable));

char     add_sat(char, char) __attribute__((overloadable));
char2    add_sat(char2, char2) __attribute__((overloadable));
char3    add_sat(char3, char3) __attribute__((overloadable));
char4    add_sat(char4, char4) __attribute__((overloadable));
char8    add_sat(char8, char8) __attribute__((overloadable));
char16   add_sat(char16, char16) __attribute__((overloadable));
short    add_sat(short, short) __attribute__((overloadable));
short2   add_sat(short2, short2) __attribute__((overloadable));
short3   add_sat(short3, short3) __attribute__((overloadable));
short4   add_sat(short4, short4) __attribute__((overloadable));
short8   add_sat(short8, short8) __attribute__((overloadable));
short16  add_sat(short16, short16) __attribute__((overloadable));
int      add_sat(int, int) __attribute__((overloadable));
int2     add_sat(int2, int2) __attribute__((overloadable));
int3     add_sat(int3, int3) __attribute__((overloadable));
int4     add_sat(int4, int4) __attribute__((overloadable));
int8     add_sat(int8, int8) __attribute__((overloadable));
int16    add_sat(int16, int16) __attribute__((overloadable));
long     add_sat(long, long) __attribute__((overloadable));
long2    add_sat(long2, long2) __attribute__((overloadable));
long3    add_sat(long3, long3) __attribute__((overloadable));
long4    add_sat(long4, long4) __attribute__((overloadable));
long8    add_sat(long8, long8) __attribute__((overloadable));
long16   add_sat(long16, long16) __attribute__((overloadable));
uchar    add_sat(uchar, uchar) __attribute__((overloadable));
uchar2   add_sat(uchar2, uchar2) __attribute__((overloadable));
uchar3   add_sat(uchar3, uchar3) __attribute__((overloadable));
uchar4   add_sat(uchar4, uchar4) __attribute__((overloadable));
uchar8   add_sat(uchar8, uchar8) __attribute__((overloadable));
uchar16  add_sat(uchar16, uchar16) __attribute__((overloadable));
ushort   add_sat(ushort, ushort) __attribute__((overloadable));
ushort2  add_sat(ushort2, ushort2) __attribute__((overloadable));
ushort3  add_sat(ushort3, ushort3) __attribute__((overloadable));
ushort4  add_sat(ushort4, ushort4) __attribute__((overloadable));
ushort8  add_sat(ushort8, ushort8) __attribute__((overloadable));
ushort16 add_sat(ushort16, ushort16) __attribute__((overloadable));
uint     add_sat(uint, uint) __attribute__((overloadable));
uint2    add_sat(uint2, uint2) __attribute__((overloadable));
uint3    add_sat(uint3, uint3) __attribute__((overloadable));
uint4    add_sat(uint4, uint4) __attribute__((overloadable));
uint8    add_sat(uint8, uint8) __attribute__((overloadable));
uint16   add_sat(uint16, uint16) __attribute__((overloadable));
ulong    add_sat(ulong, ulong) __attribute__((overloadable));
ulong2   add_sat(ulong2, ulong2) __attribute__((overloadable));
ulong3   add_sat(ulong3, ulong3) __attribute__((overloadable));
ulong4   add_sat(ulong4, ulong4) __attribute__((overloadable));
ulong8   add_sat(ulong8, ulong8) __attribute__((overloadable));
ulong16  add_sat(ulong16, ulong16) __attribute__((overloadable));

char     hadd(char, char) __attribute__((overloadable));
char2    hadd(char2, char2) __attribute__((overloadable));
char3    hadd(char3, char3) __attribute__((overloadable));
char4    hadd(char4, char4) __attribute__((overloadable));
char8    hadd(char8, char8) __attribute__((overloadable));
char16   hadd(char16, char16) __attribute__((overloadable));
short    hadd(short, short) __attribute__((overloadable));
short2   hadd(short2, short2) __attribute__((overloadable));
short3   hadd(short3, short3) __attribute__((overloadable));
short4   hadd(short4, short4) __attribute__((overloadable));
short8   hadd(short8, short8) __attribute__((overloadable));
short16  hadd(short16, short16) __attribute__((overloadable));
int      hadd(int, int) __attribute__((overloadable));
int2     hadd(int2, int2) __attribute__((overloadable));
int3     hadd(int3, int3) __attribute__((overloadable));
int4     hadd(int4, int4) __attribute__((overloadable));
int8     hadd(int8, int8) __attribute__((overloadable));
int16    hadd(int16, int16) __attribute__((overloadable));
long     hadd(long, long) __attribute__((overloadable));
long2    hadd(long2, long2) __attribute__((overloadable));
long3    hadd(long3, long3) __attribute__((overloadable));
long4    hadd(long4, long4) __attribute__((overloadable));
long8    hadd(long8, long8) __attribute__((overloadable));
long16   hadd(long16, long16) __attribute__((overloadable));
uchar    hadd(uchar, uchar) __attribute__((overloadable));
uchar2   hadd(uchar2, uchar2) __attribute__((overloadable));
uchar3   hadd(uchar3, uchar3) __attribute__((overloadable));
uchar4   hadd(uchar4, uchar4) __attribute__((overloadable));
uchar8   hadd(uchar8, uchar8) __attribute__((overloadable));
uchar16  hadd(uchar16, uchar16) __attribute__((overloadable));
ushort   hadd(ushort, ushort) __attribute__((overloadable));
ushort2  hadd(ushort2, ushort2) __attribute__((overloadable));
ushort3  hadd(ushort3, ushort3) __attribute__((overloadable));
ushort4  hadd(ushort4, ushort4) __attribute__((overloadable));
ushort8  hadd(ushort8, ushort8) __attribute__((overloadable));
ushort16 hadd(ushort16, ushort16) __attribute__((overloadable));
uint     hadd(uint, uint) __attribute__((overloadable));
uint2    hadd(uint2, uint2) __attribute__((overloadable));
uint3    hadd(uint3, uint3) __attribute__((overloadable));
uint4    hadd(uint4, uint4) __attribute__((overloadable));
uint8    hadd(uint8, uint8) __attribute__((overloadable));
uint16   hadd(uint16, uint16) __attribute__((overloadable));
ulong    hadd(ulong, ulong) __attribute__((overloadable));
ulong2   hadd(ulong2, ulong2) __attribute__((overloadable));
ulong3   hadd(ulong3, ulong3) __attribute__((overloadable));
ulong4   hadd(ulong4, ulong4) __attribute__((overloadable));
ulong8   hadd(ulong8, ulong8) __attribute__((overloadable));
ulong16  hadd(ulong16, ulong16) __attribute__((overloadable));

char     rhadd(char, char) __attribute__((overloadable));
char2    rhadd(char2, char2) __attribute__((overloadable));
char3    rhadd(char3, char3) __attribute__((overloadable));
char4    rhadd(char4, char4) __attribute__((overloadable));
char8    rhadd(char8, char8) __attribute__((overloadable));
char16   rhadd(char16, char16) __attribute__((overloadable));
short    rhadd(short, short) __attribute__((overloadable));
short2   rhadd(short2, short2) __attribute__((overloadable));
short3   rhadd(short3, short3) __attribute__((overloadable));
short4   rhadd(short4, short4) __attribute__((overloadable));
short8   rhadd(short8, short8) __attribute__((overloadable));
short16  rhadd(short16, short16) __attribute__((overloadable));
int      rhadd(int, int) __attribute__((overloadable));
int2     rhadd(int2, int2) __attribute__((overloadable));
int3     rhadd(int3, int3) __attribute__((overloadable));
int4     rhadd(int4, int4) __attribute__((overloadable));
int8     rhadd(int8, int8) __attribute__((overloadable));
int16    rhadd(int16, int16) __attribute__((overloadable));
long     rhadd(long, long) __attribute__((overloadable));
long2    rhadd(long2, long2) __attribute__((overloadable));
long3    rhadd(long3, long3) __attribute__((overloadable));
long4    rhadd(long4, long4) __attribute__((overloadable));
long8    rhadd(long8, long8) __attribute__((overloadable));
long16   rhadd(long16, long16) __attribute__((overloadable));
uchar    rhadd(uchar, uchar) __attribute__((overloadable));
uchar2   rhadd(uchar2, uchar2) __attribute__((overloadable));
uchar3   rhadd(uchar3, uchar3) __attribute__((overloadable));
uchar4   rhadd(uchar4, uchar4) __attribute__((overloadable));
uchar8   rhadd(uchar8, uchar8) __attribute__((overloadable));
uchar16  rhadd(uchar16, uchar16) __attribute__((overloadable));
ushort   rhadd(ushort, ushort) __attribute__((overloadable));
ushort2  rhadd(ushort2, ushort2) __attribute__((overloadable));
ushort3  rhadd(ushort3, ushort3) __attribute__((overloadable));
ushort4  rhadd(ushort4, ushort4) __attribute__((overloadable));
ushort8  rhadd(ushort8, ushort8) __attribute__((overloadable));
ushort16 rhadd(ushort16, ushort16) __attribute__((overloadable));
uint     rhadd(uint, uint) __attribute__((overloadable));
uint2    rhadd(uint2, uint2) __attribute__((overloadable));
uint3    rhadd(uint3, uint3) __attribute__((overloadable));
uint4    rhadd(uint4, uint4) __attribute__((overloadable));
uint8    rhadd(uint8, uint8) __attribute__((overloadable));
uint16   rhadd(uint16, uint16) __attribute__((overloadable));
ulong    rhadd(ulong, ulong) __attribute__((overloadable));
ulong2   rhadd(ulong2, ulong2) __attribute__((overloadable));
ulong3   rhadd(ulong3, ulong3) __attribute__((overloadable));
ulong4   rhadd(ulong4, ulong4) __attribute__((overloadable));
ulong8   rhadd(ulong8, ulong8) __attribute__((overloadable));
ulong16  rhadd(ulong16, ulong16) __attribute__((overloadable));

char     clamp(char, char, char) __attribute__((overloadable));
char2    clamp(char2, char2, char2) __attribute__((overloadable));
char3    clamp(char3, char3, char3) __attribute__((overloadable));
char4    clamp(char4, char4, char4) __attribute__((overloadable));
char8    clamp(char8, char8, char8) __attribute__((overloadable));
char16   clamp(char16, char16, char16) __attribute__((overloadable));
short    clamp(short, short, short) __attribute__((overloadable));
short2   clamp(short2, short2, short2) __attribute__((overloadable));
short3   clamp(short3, short3, short3) __attribute__((overloadable));
short4   clamp(short4, short4, short4) __attribute__((overloadable));
short8   clamp(short8, short8, short8) __attribute__((overloadable));
short16  clamp(short16, short16, short16) __attribute__((overloadable));
int      clamp(int, int, int) __attribute__((overloadable));
int2     clamp(int2, int2, int2) __attribute__((overloadable));
int3     clamp(int3, int3, int3) __attribute__((overloadable));
int4     clamp(int4, int4, int4) __attribute__((overloadable));
int8     clamp(int8, int8, int8) __attribute__((overloadable));
int16    clamp(int16, int16, int16) __attribute__((overloadable));
long     clamp(long, long, long) __attribute__((overloadable));
long2    clamp(long2, long2, long2) __attribute__((overloadable));
long3    clamp(long3, long3, long3) __attribute__((overloadable));
long4    clamp(long4, long4, long4) __attribute__((overloadable));
long8    clamp(long8, long8, long8) __attribute__((overloadable));
long16   clamp(long16, long16, long16) __attribute__((overloadable));
uchar    clamp(uchar, uchar, uchar) __attribute__((overloadable));
uchar2   clamp(uchar2, uchar2, uchar2) __attribute__((overloadable));
uchar3   clamp(uchar3, uchar3, uchar3) __attribute__((overloadable));
uchar4   clamp(uchar4, uchar4, uchar4) __attribute__((overloadable));
uchar8   clamp(uchar8, uchar8, uchar8) __attribute__((overloadable));
uchar16  clamp(uchar16, uchar16, uchar16) __attribute__((overloadable));
ushort   clamp(ushort, ushort, ushort) __attribute__((overloadable));
ushort2  clamp(ushort2, ushort2, ushort2) __attribute__((overloadable));
ushort3  clamp(ushort3, ushort3, ushort3) __attribute__((overloadable));
ushort4  clamp(ushort4, ushort4, ushort4) __attribute__((overloadable));
ushort8  clamp(ushort8, ushort8, ushort8) __attribute__((overloadable));
ushort16 clamp(ushort16, ushort16, ushort16) __attribute__((overloadable));
uint     clamp(uint, uint, uint) __attribute__((overloadable));
uint2    clamp(uint2, uint2, uint2) __attribute__((overloadable));
uint3    clamp(uint3, uint3, uint3) __attribute__((overloadable));
uint4    clamp(uint4, uint4, uint4) __attribute__((overloadable));
uint8    clamp(uint8, uint8, uint8) __attribute__((overloadable));
uint16   clamp(uint16, uint16, uint16) __attribute__((overloadable));
ulong    clamp(ulong, ulong, ulong) __attribute__((overloadable));
ulong2   clamp(ulong2, ulong2, ulong2) __attribute__((overloadable));
ulong3   clamp(ulong3, ulong3, ulong3) __attribute__((overloadable));
ulong4   clamp(ulong4, ulong4, ulong4) __attribute__((overloadable));
ulong8   clamp(ulong8, ulong8, ulong8) __attribute__((overloadable));
ulong16  clamp(ulong16, ulong16, ulong16) __attribute__((overloadable));

char2    clamp(char2, char, char) __attribute__((overloadable));
char3    clamp(char3, char, char) __attribute__((overloadable));
char4    clamp(char4, char, char) __attribute__((overloadable));
char8    clamp(char8, char, char) __attribute__((overloadable));
char16   clamp(char16, char, char) __attribute__((overloadable));
short2   clamp(short2, short, short) __attribute__((overloadable));
short3   clamp(short3, short, short) __attribute__((overloadable));
short4   clamp(short4, short, short) __attribute__((overloadable));
short8   clamp(short8, short, short) __attribute__((overloadable));
short16  clamp(short16, short, short) __attribute__((overloadable));
int2     clamp(int2, int, int) __attribute__((overloadable));
int3     clamp(int3, int, int) __attribute__((overloadable));
int4     clamp(int4, int, int) __attribute__((overloadable));
int8     clamp(int8, int, int) __attribute__((overloadable));
int16    clamp(int16, int, int) __attribute__((overloadable));
long2    clamp(long2, long, long) __attribute__((overloadable));
long3    clamp(long3, long, long) __attribute__((overloadable));
long4    clamp(long4, long, long) __attribute__((overloadable));
long8    clamp(long8, long, long) __attribute__((overloadable));
long16   clamp(long16, long, long) __attribute__((overloadable));
uchar2   clamp(uchar2, uchar, uchar) __attribute__((overloadable));
uchar3   clamp(uchar3, uchar, uchar) __attribute__((overloadable));
uchar4   clamp(uchar4, uchar, uchar) __attribute__((overloadable));
uchar8   clamp(uchar8, uchar, uchar) __attribute__((overloadable));
uchar16  clamp(uchar16, uchar, uchar) __attribute__((overloadable));
ushort2  clamp(ushort2, ushort, ushort) __attribute__((overloadable));
ushort3  clamp(ushort3, ushort, ushort) __attribute__((overloadable));
ushort4  clamp(ushort4, ushort, ushort) __attribute__((overloadable));
ushort8  clamp(ushort8, ushort, ushort) __attribute__((overloadable));
ushort16 clamp(ushort16, ushort, ushort) __attribute__((overloadable));
uint2    clamp(uint2, uint, uint) __attribute__((overloadable));
uint3    clamp(uint3, uint, uint) __attribute__((overloadable));
uint4    clamp(uint4, uint, uint) __attribute__((overloadable));
uint8    clamp(uint8, uint, uint) __attribute__((overloadable));
uint16   clamp(uint16, uint, uint) __attribute__((overloadable));
ulong2   clamp(ulong2, ulong, ulong) __attribute__((overloadable));
ulong3   clamp(ulong3, ulong, ulong) __attribute__((overloadable));
ulong4   clamp(ulong4, ulong, ulong) __attribute__((overloadable));
ulong8   clamp(ulong8, ulong, ulong) __attribute__((overloadable));
ulong16  clamp(ulong16, ulong, ulong) __attribute__((overloadable));

char     clz(char) __attribute__((overloadable));
char2    clz(char2) __attribute__((overloadable));
char3    clz(char3) __attribute__((overloadable));
char4    clz(char4) __attribute__((overloadable));
char8    clz(char8) __attribute__((overloadable));
char16   clz(char16) __attribute__((overloadable));
short    clz(short) __attribute__((overloadable));
short2   clz(short2) __attribute__((overloadable));
short3   clz(short3) __attribute__((overloadable));
short4   clz(short4) __attribute__((overloadable));
short8   clz(short8) __attribute__((overloadable));
short16  clz(short16) __attribute__((overloadable));
int      clz(int) __attribute__((overloadable));
int2     clz(int2) __attribute__((overloadable));
int3     clz(int3) __attribute__((overloadable));
int4     clz(int4) __attribute__((overloadable));
int8     clz(int8) __attribute__((overloadable));
int16    clz(int16) __attribute__((overloadable));
long     clz(long) __attribute__((overloadable));
long2    clz(long2) __attribute__((overloadable));
long3    clz(long3) __attribute__((overloadable));
long4    clz(long4) __attribute__((overloadable));
long8    clz(long8) __attribute__((overloadable));
long16   clz(long16) __attribute__((overloadable));
uchar    clz(uchar) __attribute__((overloadable));
uchar2   clz(uchar2) __attribute__((overloadable));
uchar3   clz(uchar3) __attribute__((overloadable));
uchar4   clz(uchar4) __attribute__((overloadable));
uchar8   clz(uchar8) __attribute__((overloadable));
uchar16  clz(uchar16) __attribute__((overloadable));
ushort   clz(ushort) __attribute__((overloadable));
ushort2  clz(ushort2) __attribute__((overloadable));
ushort3  clz(ushort3) __attribute__((overloadable));
ushort4  clz(ushort4) __attribute__((overloadable));
ushort8  clz(ushort8) __attribute__((overloadable));
ushort16 clz(ushort16) __attribute__((overloadable));
uint     clz(uint) __attribute__((overloadable));
uint2    clz(uint2) __attribute__((overloadable));
uint3    clz(uint3) __attribute__((overloadable));
uint4    clz(uint4) __attribute__((overloadable));
uint8    clz(uint8) __attribute__((overloadable));
uint16   clz(uint16) __attribute__((overloadable));
ulong    clz(ulong) __attribute__((overloadable));
ulong2   clz(ulong2) __attribute__((overloadable));
ulong3   clz(ulong3) __attribute__((overloadable));
ulong4   clz(ulong4) __attribute__((overloadable));
ulong8   clz(ulong8) __attribute__((overloadable));
ulong16  clz(ulong16) __attribute__((overloadable));

char     mad_hi(char, char, char) __attribute__((overloadable));
char2    mad_hi(char2, char2, char2) __attribute__((overloadable));
char3    mad_hi(char3, char3, char3) __attribute__((overloadable));
char4    mad_hi(char4, char4, char4) __attribute__((overloadable));
char8    mad_hi(char8, char8, char8) __attribute__((overloadable));
char16   mad_hi(char16, char16, char16) __attribute__((overloadable));
short    mad_hi(short, short, short) __attribute__((overloadable));
short2   mad_hi(short2, short2, short2) __attribute__((overloadable));
short3   mad_hi(short3, short3, short3) __attribute__((overloadable));
short4   mad_hi(short4, short4, short4) __attribute__((overloadable));
short8   mad_hi(short8, short8, short8) __attribute__((overloadable));
short16  mad_hi(short16, short16, short16) __attribute__((overloadable));
int      mad_hi(int, int, int) __attribute__((overloadable));
int2     mad_hi(int2, int2, int2) __attribute__((overloadable));
int3     mad_hi(int3, int3, int3) __attribute__((overloadable));
int4     mad_hi(int4, int4, int4) __attribute__((overloadable));
int8     mad_hi(int8, int8, int8) __attribute__((overloadable));
int16    mad_hi(int16, int16, int16) __attribute__((overloadable));
long     mad_hi(long, long, long) __attribute__((overloadable));
long2    mad_hi(long2, long2, long2) __attribute__((overloadable));
long3    mad_hi(long3, long3, long3) __attribute__((overloadable));
long4    mad_hi(long4, long4, long4) __attribute__((overloadable));
long8    mad_hi(long8, long8, long8) __attribute__((overloadable));
long16   mad_hi(long16, long16, long16) __attribute__((overloadable));
uchar    mad_hi(uchar, uchar, uchar) __attribute__((overloadable));
uchar2   mad_hi(uchar2, uchar2, uchar2) __attribute__((overloadable));
uchar3   mad_hi(uchar3, uchar3, uchar3) __attribute__((overloadable));
uchar4   mad_hi(uchar4, uchar4, uchar4) __attribute__((overloadable));
uchar8   mad_hi(uchar8, uchar8, uchar8) __attribute__((overloadable));
uchar16  mad_hi(uchar16, uchar16, uchar16) __attribute__((overloadable));
ushort   mad_hi(ushort, ushort, ushort) __attribute__((overloadable));
ushort2  mad_hi(ushort2, ushort2, ushort2) __attribute__((overloadable));
ushort3  mad_hi(ushort3, ushort3, ushort3) __attribute__((overloadable));
ushort4  mad_hi(ushort4, ushort4, ushort4) __attribute__((overloadable));
ushort8  mad_hi(ushort8, ushort8, ushort8) __attribute__((overloadable));
ushort16 mad_hi(ushort16, ushort16, ushort16) __attribute__((overloadable));
uint     mad_hi(uint, uint, uint) __attribute__((overloadable));
uint2    mad_hi(uint2, uint2, uint2) __attribute__((overloadable));
uint3    mad_hi(uint3, uint3, uint3) __attribute__((overloadable));
uint4    mad_hi(uint4, uint4, uint4) __attribute__((overloadable));
uint8    mad_hi(uint8, uint8, uint8) __attribute__((overloadable));
uint16   mad_hi(uint16, uint16, uint16) __attribute__((overloadable));
ulong    mad_hi(ulong, ulong, ulong) __attribute__((overloadable));
ulong2   mad_hi(ulong2, ulong2, ulong2) __attribute__((overloadable));
ulong3   mad_hi(ulong3, ulong3, ulong3) __attribute__((overloadable));
ulong4   mad_hi(ulong4, ulong4, ulong4) __attribute__((overloadable));
ulong8   mad_hi(ulong8, ulong8, ulong8) __attribute__((overloadable));
ulong16  mad_hi(ulong16, ulong16, ulong16) __attribute__((overloadable));

char     mad_sat(char, char, char) __attribute__((overloadable));
char2    mad_sat(char2, char2, char2) __attribute__((overloadable));
char3    mad_sat(char3, char3, char3) __attribute__((overloadable));
char4    mad_sat(char4, char4, char4) __attribute__((overloadable));
char8    mad_sat(char8, char8, char8) __attribute__((overloadable));
char16   mad_sat(char16, char16, char16) __attribute__((overloadable));
short    mad_sat(short, short, short) __attribute__((overloadable));
short2   mad_sat(short2, short2, short2) __attribute__((overloadable));
short3   mad_sat(short3, short3, short3) __attribute__((overloadable));
short4   mad_sat(short4, short4, short4) __attribute__((overloadable));
short8   mad_sat(short8, short8, short8) __attribute__((overloadable));
short16  mad_sat(short16, short16, short16) __attribute__((overloadable));
int      mad_sat(int, int, int) __attribute__((overloadable));
int2     mad_sat(int2, int2, int2) __attribute__((overloadable));
int3     mad_sat(int3, int3, int3) __attribute__((overloadable));
int4     mad_sat(int4, int4, int4) __attribute__((overloadable));
int8     mad_sat(int8, int8, int8) __attribute__((overloadable));
int16    mad_sat(int16, int16, int16) __attribute__((overloadable));
long     mad_sat(long, long, long) __attribute__((overloadable));
long2    mad_sat(long2, long2, long2) __attribute__((overloadable));
long3    mad_sat(long3, long3, long3) __attribute__((overloadable));
long4    mad_sat(long4, long4, long4) __attribute__((overloadable));
long8    mad_sat(long8, long8, long8) __attribute__((overloadable));
long16   mad_sat(long16, long16, long16) __attribute__((overloadable));
uchar    mad_sat(uchar, uchar, uchar) __attribute__((overloadable));
uchar2   mad_sat(uchar2, uchar2, uchar2) __attribute__((overloadable));
uchar3   mad_sat(uchar3, uchar3, uchar3) __attribute__((overloadable));
uchar4   mad_sat(uchar4, uchar4, uchar4) __attribute__((overloadable));
uchar8   mad_sat(uchar8, uchar8, uchar8) __attribute__((overloadable));
uchar16  mad_sat(uchar16, uchar16, uchar16) __attribute__((overloadable));
ushort   mad_sat(ushort, ushort, ushort) __attribute__((overloadable));
ushort2  mad_sat(ushort2, ushort2, ushort2) __attribute__((overloadable));
ushort3  mad_sat(ushort3, ushort3, ushort3) __attribute__((overloadable));
ushort4  mad_sat(ushort4, ushort4, ushort4) __attribute__((overloadable));
ushort8  mad_sat(ushort8, ushort8, ushort8) __attribute__((overloadable));
ushort16 mad_sat(ushort16, ushort16, ushort16) __attribute__((overloadable));
uint     mad_sat(uint, uint, uint) __attribute__((overloadable));
uint2    mad_sat(uint2, uint2, uint2) __attribute__((overloadable));
uint3    mad_sat(uint3, uint3, uint3) __attribute__((overloadable));
uint4    mad_sat(uint4, uint4, uint4) __attribute__((overloadable));
uint8    mad_sat(uint8, uint8, uint8) __attribute__((overloadable));
uint16   mad_sat(uint16, uint16, uint16) __attribute__((overloadable));
ulong    mad_sat(ulong, ulong, ulong) __attribute__((overloadable));
ulong2   mad_sat(ulong2, ulong2, ulong2) __attribute__((overloadable));
ulong3   mad_sat(ulong3, ulong3, ulong3) __attribute__((overloadable));
ulong4   mad_sat(ulong4, ulong4, ulong4) __attribute__((overloadable));
ulong8   mad_sat(ulong8, ulong8, ulong8) __attribute__((overloadable));
ulong16  mad_sat(ulong16, ulong16, ulong16) __attribute__((overloadable));

char     max(char, char) __attribute__((overloadable));
char2    max(char2, char2) __attribute__((overloadable));
char3    max(char3, char3) __attribute__((overloadable));
char4    max(char4, char4) __attribute__((overloadable));
char8    max(char8, char8) __attribute__((overloadable));
char16   max(char16, char16) __attribute__((overloadable));
short    max(short, short) __attribute__((overloadable));
short2   max(short2, short2) __attribute__((overloadable));
short3   max(short3, short3) __attribute__((overloadable));
short4   max(short4, short4) __attribute__((overloadable));
short8   max(short8, short8) __attribute__((overloadable));
short16  max(short16, short16) __attribute__((overloadable));
int      max(int, int) __attribute__((overloadable));
int2     max(int2, int2) __attribute__((overloadable));
int3     max(int3, int3) __attribute__((overloadable));
int4     max(int4, int4) __attribute__((overloadable));
int8     max(int8, int8) __attribute__((overloadable));
int16    max(int16, int16) __attribute__((overloadable));
long     max(long, long) __attribute__((overloadable));
long2    max(long2, long2) __attribute__((overloadable));
long3    max(long3, long3) __attribute__((overloadable));
long4    max(long4, long4) __attribute__((overloadable));
long8    max(long8, long8) __attribute__((overloadable));
long16   max(long16, long16) __attribute__((overloadable));
uchar    max(uchar, uchar) __attribute__((overloadable));
uchar2   max(uchar2, uchar2) __attribute__((overloadable));
uchar3   max(uchar3, uchar3) __attribute__((overloadable));
uchar4   max(uchar4, uchar4) __attribute__((overloadable));
uchar8   max(uchar8, uchar8) __attribute__((overloadable));
uchar16  max(uchar16, uchar16) __attribute__((overloadable));
ushort   max(ushort, ushort) __attribute__((overloadable));
ushort2  max(ushort2, ushort2) __attribute__((overloadable));
ushort3  max(ushort3, ushort3) __attribute__((overloadable));
ushort4  max(ushort4, ushort4) __attribute__((overloadable));
ushort8  max(ushort8, ushort8) __attribute__((overloadable));
ushort16 max(ushort16, ushort16) __attribute__((overloadable));
uint     max(uint, uint) __attribute__((overloadable));
uint2    max(uint2, uint2) __attribute__((overloadable));
uint3    max(uint3, uint3) __attribute__((overloadable));
uint4    max(uint4, uint4) __attribute__((overloadable));
uint8    max(uint8, uint8) __attribute__((overloadable));
uint16   max(uint16, uint16) __attribute__((overloadable));
ulong    max(ulong, ulong) __attribute__((overloadable));
ulong2   max(ulong2, ulong2) __attribute__((overloadable));
ulong3   max(ulong3, ulong3) __attribute__((overloadable));
ulong4   max(ulong4, ulong4) __attribute__((overloadable));
ulong8   max(ulong8, ulong8) __attribute__((overloadable));
ulong16  max(ulong16, ulong16) __attribute__((overloadable));

char2    max(char2, char) __attribute__((overloadable));
char3    max(char3, char) __attribute__((overloadable));
char4    max(char4, char) __attribute__((overloadable));
char8    max(char8, char) __attribute__((overloadable));
char16   max(char16, char) __attribute__((overloadable));
short2   max(short2, short) __attribute__((overloadable));
short3   max(short3, short) __attribute__((overloadable));
short4   max(short4, short) __attribute__((overloadable));
short8   max(short8, short) __attribute__((overloadable));
short16  max(short16, short) __attribute__((overloadable));
int2     max(int2, int) __attribute__((overloadable));
int3     max(int3, int) __attribute__((overloadable));
int4     max(int4, int) __attribute__((overloadable));
int8     max(int8, int) __attribute__((overloadable));
int16    max(int16, int) __attribute__((overloadable));
long2    max(long2, long) __attribute__((overloadable));
long3    max(long3, long) __attribute__((overloadable));
long4    max(long4, long) __attribute__((overloadable));
long8    max(long8, long) __attribute__((overloadable));
long16   max(long16, long) __attribute__((overloadable));
uchar2   max(uchar2, uchar) __attribute__((overloadable));
uchar3   max(uchar3, uchar) __attribute__((overloadable));
uchar4   max(uchar4, uchar) __attribute__((overloadable));
uchar8   max(uchar8, uchar) __attribute__((overloadable));
uchar16  max(uchar16, uchar) __attribute__((overloadable));
ushort2  max(ushort2, ushort) __attribute__((overloadable));
ushort3  max(ushort3, ushort) __attribute__((overloadable));
ushort4  max(ushort4, ushort) __attribute__((overloadable));
ushort8  max(ushort8, ushort) __attribute__((overloadable));
ushort16 max(ushort16, ushort) __attribute__((overloadable));
uint2    max(uint2, uint) __attribute__((overloadable));
uint3    max(uint3, uint) __attribute__((overloadable));
uint4    max(uint4, uint) __attribute__((overloadable));
uint8    max(uint8, uint) __attribute__((overloadable));
uint16   max(uint16, uint) __attribute__((overloadable));
ulong2   max(ulong2, ulong) __attribute__((overloadable));
ulong3   max(ulong3, ulong) __attribute__((overloadable));
ulong4   max(ulong4, ulong) __attribute__((overloadable));
ulong8   max(ulong8, ulong) __attribute__((overloadable));
ulong16  max(ulong16, ulong) __attribute__((overloadable));

char     min(char, char) __attribute__((overloadable));
char2    min(char2, char2) __attribute__((overloadable));
char3    min(char3, char3) __attribute__((overloadable));
char4    min(char4, char4) __attribute__((overloadable));
char8    min(char8, char8) __attribute__((overloadable));
char16   min(char16, char16) __attribute__((overloadable));
short    min(short, short) __attribute__((overloadable));
short2   min(short2, short2) __attribute__((overloadable));
short3   min(short3, short3) __attribute__((overloadable));
short4   min(short4, short4) __attribute__((overloadable));
short8   min(short8, short8) __attribute__((overloadable));
short16  min(short16, short16) __attribute__((overloadable));
int      min(int, int) __attribute__((overloadable));
int2     min(int2, int2) __attribute__((overloadable));
int3     min(int3, int3) __attribute__((overloadable));
int4     min(int4, int4) __attribute__((overloadable));
int8     min(int8, int8) __attribute__((overloadable));
int16    min(int16, int16) __attribute__((overloadable));
long     min(long, long) __attribute__((overloadable));
long2    min(long2, long2) __attribute__((overloadable));
long3    min(long3, long3) __attribute__((overloadable));
long4    min(long4, long4) __attribute__((overloadable));
long8    min(long8, long8) __attribute__((overloadable));
long16   min(long16, long16) __attribute__((overloadable));
uchar    min(uchar, uchar) __attribute__((overloadable));
uchar2   min(uchar2, uchar2) __attribute__((overloadable));
uchar3   min(uchar3, uchar3) __attribute__((overloadable));
uchar4   min(uchar4, uchar4) __attribute__((overloadable));
uchar8   min(uchar8, uchar8) __attribute__((overloadable));
uchar16  min(uchar16, uchar16) __attribute__((overloadable));
ushort   min(ushort, ushort) __attribute__((overloadable));
ushort2  min(ushort2, ushort2) __attribute__((overloadable));
ushort3  min(ushort3, ushort3) __attribute__((overloadable));
ushort4  min(ushort4, ushort4) __attribute__((overloadable));
ushort8  min(ushort8, ushort8) __attribute__((overloadable));
ushort16 min(ushort16, ushort16) __attribute__((overloadable));
uint     min(uint, uint) __attribute__((overloadable));
uint2    min(uint2, uint2) __attribute__((overloadable));
uint3    min(uint3, uint3) __attribute__((overloadable));
uint4    min(uint4, uint4) __attribute__((overloadable));
uint8    min(uint8, uint8) __attribute__((overloadable));
uint16   min(uint16, uint16) __attribute__((overloadable));
ulong    min(ulong, ulong) __attribute__((overloadable));
ulong2   min(ulong2, ulong2) __attribute__((overloadable));
ulong3   min(ulong3, ulong3) __attribute__((overloadable));
ulong4   min(ulong4, ulong4) __attribute__((overloadable));
ulong8   min(ulong8, ulong8) __attribute__((overloadable));
ulong16  min(ulong16, ulong16) __attribute__((overloadable));

char2    min(char2, char) __attribute__((overloadable));
char3    min(char3, char) __attribute__((overloadable));
char4    min(char4, char) __attribute__((overloadable));
char8    min(char8, char) __attribute__((overloadable));
char16   min(char16, char) __attribute__((overloadable));
short2   min(short2, short) __attribute__((overloadable));
short3   min(short3, short) __attribute__((overloadable));
short4   min(short4, short) __attribute__((overloadable));
short8   min(short8, short) __attribute__((overloadable));
short16  min(short16, short) __attribute__((overloadable));
int2     min(int2, int) __attribute__((overloadable));
int3     min(int3, int) __attribute__((overloadable));
int4     min(int4, int) __attribute__((overloadable));
int8     min(int8, int) __attribute__((overloadable));
int16    min(int16, int) __attribute__((overloadable));
long2    min(long2, long) __attribute__((overloadable));
long3    min(long3, long) __attribute__((overloadable));
long4    min(long4, long) __attribute__((overloadable));
long8    min(long8, long) __attribute__((overloadable));
long16   min(long16, long) __attribute__((overloadable));
uchar2   min(uchar2, uchar) __attribute__((overloadable));
uchar3   min(uchar3, uchar) __attribute__((overloadable));
uchar4   min(uchar4, uchar) __attribute__((overloadable));
uchar8   min(uchar8, uchar) __attribute__((overloadable));
uchar16  min(uchar16, uchar) __attribute__((overloadable));
ushort2  min(ushort2, ushort) __attribute__((overloadable));
ushort3  min(ushort3, ushort) __attribute__((overloadable));
ushort4  min(ushort4, ushort) __attribute__((overloadable));
ushort8  min(ushort8, ushort) __attribute__((overloadable));
ushort16 min(ushort16, ushort) __attribute__((overloadable));
uint2    min(uint2, uint) __attribute__((overloadable));
uint3    min(uint3, uint) __attribute__((overloadable));
uint4    min(uint4, uint) __attribute__((overloadable));
uint8    min(uint8, uint) __attribute__((overloadable));
uint16   min(uint16, uint) __attribute__((overloadable));
ulong2   min(ulong2, ulong) __attribute__((overloadable));
ulong3   min(ulong3, ulong) __attribute__((overloadable));
ulong4   min(ulong4, ulong) __attribute__((overloadable));
ulong8   min(ulong8, ulong) __attribute__((overloadable));
ulong16  min(ulong16, ulong) __attribute__((overloadable));

char     mul_hi(char, char) __attribute__((overloadable));
char2    mul_hi(char2, char2) __attribute__((overloadable));
char3    mul_hi(char3, char3) __attribute__((overloadable));
char4    mul_hi(char4, char4) __attribute__((overloadable));
char8    mul_hi(char8, char8) __attribute__((overloadable));
char16   mul_hi(char16, char16) __attribute__((overloadable));
short    mul_hi(short, short) __attribute__((overloadable));
short2   mul_hi(short2, short2) __attribute__((overloadable));
short3   mul_hi(short3, short3) __attribute__((overloadable));
short4   mul_hi(short4, short4) __attribute__((overloadable));
short8   mul_hi(short8, short8) __attribute__((overloadable));
short16  mul_hi(short16, short16) __attribute__((overloadable));
int      mul_hi(int, int) __attribute__((overloadable));
int2     mul_hi(int2, int2) __attribute__((overloadable));
int3     mul_hi(int3, int3) __attribute__((overloadable));
int4     mul_hi(int4, int4) __attribute__((overloadable));
int8     mul_hi(int8, int8) __attribute__((overloadable));
int16    mul_hi(int16, int16) __attribute__((overloadable));
long     mul_hi(long, long) __attribute__((overloadable));
long2    mul_hi(long2, long2) __attribute__((overloadable));
long3    mul_hi(long3, long3) __attribute__((overloadable));
long4    mul_hi(long4, long4) __attribute__((overloadable));
long8    mul_hi(long8, long8) __attribute__((overloadable));
long16   mul_hi(long16, long16) __attribute__((overloadable));
uchar    mul_hi(uchar, uchar) __attribute__((overloadable));
uchar2   mul_hi(uchar2, uchar2) __attribute__((overloadable));
uchar3   mul_hi(uchar3, uchar3) __attribute__((overloadable));
uchar4   mul_hi(uchar4, uchar4) __attribute__((overloadable));
uchar8   mul_hi(uchar8, uchar8) __attribute__((overloadable));
uchar16  mul_hi(uchar16, uchar16) __attribute__((overloadable));
ushort   mul_hi(ushort, ushort) __attribute__((overloadable));
ushort2  mul_hi(ushort2, ushort2) __attribute__((overloadable));
ushort3  mul_hi(ushort3, ushort3) __attribute__((overloadable));
ushort4  mul_hi(ushort4, ushort4) __attribute__((overloadable));
ushort8  mul_hi(ushort8, ushort8) __attribute__((overloadable));
ushort16 mul_hi(ushort16, ushort16) __attribute__((overloadable));
uint     mul_hi(uint, uint) __attribute__((overloadable));
uint2    mul_hi(uint2, uint2) __attribute__((overloadable));
uint3    mul_hi(uint3, uint3) __attribute__((overloadable));
uint4    mul_hi(uint4, uint4) __attribute__((overloadable));
uint8    mul_hi(uint8, uint8) __attribute__((overloadable));
uint16   mul_hi(uint16, uint16) __attribute__((overloadable));
ulong    mul_hi(ulong, ulong) __attribute__((overloadable));
ulong2   mul_hi(ulong2, ulong2) __attribute__((overloadable));
ulong3   mul_hi(ulong3, ulong3) __attribute__((overloadable));
ulong4   mul_hi(ulong4, ulong4) __attribute__((overloadable));
ulong8   mul_hi(ulong8, ulong8) __attribute__((overloadable));
ulong16  mul_hi(ulong16, ulong16) __attribute__((overloadable));

char     rotate(char, char) __attribute__((overloadable));
char2    rotate(char2, char2) __attribute__((overloadable));
char3    rotate(char3, char3) __attribute__((overloadable));
char4    rotate(char4, char4) __attribute__((overloadable));
char8    rotate(char8, char8) __attribute__((overloadable));
char16   rotate(char16, char16) __attribute__((overloadable));
short    rotate(short, short) __attribute__((overloadable));
short2   rotate(short2, short2) __attribute__((overloadable));
short3   rotate(short3, short3) __attribute__((overloadable));
short4   rotate(short4, short4) __attribute__((overloadable));
short8   rotate(short8, short8) __attribute__((overloadable));
short16  rotate(short16, short16) __attribute__((overloadable));
int      rotate(int, int) __attribute__((overloadable));
int2     rotate(int2, int2) __attribute__((overloadable));
int3     rotate(int3, int3) __attribute__((overloadable));
int4     rotate(int4, int4) __attribute__((overloadable));
int8     rotate(int8, int8) __attribute__((overloadable));
int16    rotate(int16, int16) __attribute__((overloadable));
long     rotate(long, long) __attribute__((overloadable));
long2    rotate(long2, long2) __attribute__((overloadable));
long3    rotate(long3, long3) __attribute__((overloadable));
long4    rotate(long4, long4) __attribute__((overloadable));
long8    rotate(long8, long8) __attribute__((overloadable));
long16   rotate(long16, long16) __attribute__((overloadable));
uchar    rotate(uchar, uchar) __attribute__((overloadable));
uchar2   rotate(uchar2, uchar2) __attribute__((overloadable));
uchar3   rotate(uchar3, uchar3) __attribute__((overloadable));
uchar4   rotate(uchar4, uchar4) __attribute__((overloadable));
uchar8   rotate(uchar8, uchar8) __attribute__((overloadable));
uchar16  rotate(uchar16, uchar16) __attribute__((overloadable));
ushort   rotate(ushort, ushort) __attribute__((overloadable));
ushort2  rotate(ushort2, ushort2) __attribute__((overloadable));
ushort3  rotate(ushort3, ushort3) __attribute__((overloadable));
ushort4  rotate(ushort4, ushort4) __attribute__((overloadable));
ushort8  rotate(ushort8, ushort8) __attribute__((overloadable));
ushort16 rotate(ushort16, ushort16) __attribute__((overloadable));
uint     rotate(uint, uint) __attribute__((overloadable));
uint2    rotate(uint2, uint2) __attribute__((overloadable));
uint3    rotate(uint3, uint3) __attribute__((overloadable));
uint4    rotate(uint4, uint4) __attribute__((overloadable));
uint8    rotate(uint8, uint8) __attribute__((overloadable));
uint16   rotate(uint16, uint16) __attribute__((overloadable));
ulong    rotate(ulong, ulong) __attribute__((overloadable));
ulong2   rotate(ulong2, ulong2) __attribute__((overloadable));
ulong3   rotate(ulong3, ulong3) __attribute__((overloadable));
ulong4   rotate(ulong4, ulong4) __attribute__((overloadable));
ulong8   rotate(ulong8, ulong8) __attribute__((overloadable));
ulong16  rotate(ulong16, ulong16) __attribute__((overloadable));

char     sub_sat(char, char) __attribute__((overloadable));
char2    sub_sat(char2, char2) __attribute__((overloadable));
char3    sub_sat(char3, char3) __attribute__((overloadable));
char4    sub_sat(char4, char4) __attribute__((overloadable));
char8    sub_sat(char8, char8) __attribute__((overloadable));
char16   sub_sat(char16, char16) __attribute__((overloadable));
short    sub_sat(short, short) __attribute__((overloadable));
short2   sub_sat(short2, short2) __attribute__((overloadable));
short3   sub_sat(short3, short3) __attribute__((overloadable));
short4   sub_sat(short4, short4) __attribute__((overloadable));
short8   sub_sat(short8, short8) __attribute__((overloadable));
short16  sub_sat(short16, short16) __attribute__((overloadable));
int      sub_sat(int, int) __attribute__((overloadable));
int2     sub_sat(int2, int2) __attribute__((overloadable));
int3     sub_sat(int3, int3) __attribute__((overloadable));
int4     sub_sat(int4, int4) __attribute__((overloadable));
int8     sub_sat(int8, int8) __attribute__((overloadable));
int16    sub_sat(int16, int16) __attribute__((overloadable));
long     sub_sat(long, long) __attribute__((overloadable));
long2    sub_sat(long2, long2) __attribute__((overloadable));
long3    sub_sat(long3, long3) __attribute__((overloadable));
long4    sub_sat(long4, long4) __attribute__((overloadable));
long8    sub_sat(long8, long8) __attribute__((overloadable));
long16   sub_sat(long16, long16) __attribute__((overloadable));
uchar    sub_sat(uchar, uchar) __attribute__((overloadable));
uchar2   sub_sat(uchar2, uchar2) __attribute__((overloadable));
uchar3   sub_sat(uchar3, uchar3) __attribute__((overloadable));
uchar4   sub_sat(uchar4, uchar4) __attribute__((overloadable));
uchar8   sub_sat(uchar8, uchar8) __attribute__((overloadable));
uchar16  sub_sat(uchar16, uchar16) __attribute__((overloadable));
ushort   sub_sat(ushort, ushort) __attribute__((overloadable));
ushort2  sub_sat(ushort2, ushort2) __attribute__((overloadable));
ushort3  sub_sat(ushort3, ushort3) __attribute__((overloadable));
ushort4  sub_sat(ushort4, ushort4) __attribute__((overloadable));
ushort8  sub_sat(ushort8, ushort8) __attribute__((overloadable));
ushort16 sub_sat(ushort16, ushort16) __attribute__((overloadable));
uint     sub_sat(uint, uint) __attribute__((overloadable));
uint2    sub_sat(uint2, uint2) __attribute__((overloadable));
uint3    sub_sat(uint3, uint3) __attribute__((overloadable));
uint4    sub_sat(uint4, uint4) __attribute__((overloadable));
uint8    sub_sat(uint8, uint8) __attribute__((overloadable));
uint16   sub_sat(uint16, uint16) __attribute__((overloadable));
ulong    sub_sat(ulong, ulong) __attribute__((overloadable));
ulong2   sub_sat(ulong2, ulong2) __attribute__((overloadable));
ulong3   sub_sat(ulong3, ulong3) __attribute__((overloadable));
ulong4   sub_sat(ulong4, ulong4) __attribute__((overloadable));
ulong8   sub_sat(ulong8, ulong8) __attribute__((overloadable));
ulong16  sub_sat(ulong16, ulong16) __attribute__((overloadable));

short    upsample(char, uchar) __attribute__((overloadable));
short2   upsample(char2, uchar2) __attribute__((overloadable));
short3   upsample(char3, uchar3) __attribute__((overloadable));
short4   upsample(char4, uchar4) __attribute__((overloadable));
short8   upsample(char8, uchar8) __attribute__((overloadable));
short16  upsample(char16, uchar16) __attribute__((overloadable));
ushort   upsample(uchar, uchar) __attribute__((overloadable));
ushort2  upsample(uchar2, uchar2) __attribute__((overloadable));
ushort3  upsample(uchar3, uchar3) __attribute__((overloadable));
ushort4  upsample(uchar4, uchar4) __attribute__((overloadable));
ushort8  upsample(uchar8, uchar8) __attribute__((overloadable));
ushort16 upsample(uchar16, uchar16) __attribute__((overloadable));
int      upsample(short, ushort) __attribute__((overloadable));
int2     upsample(short2, ushort2) __attribute__((overloadable));
int3     upsample(short3, ushort3) __attribute__((overloadable));
int4     upsample(short4, ushort4) __attribute__((overloadable));
int8     upsample(short8, ushort8) __attribute__((overloadable));
int16    upsample(short16, ushort16) __attribute__((overloadable));
uint     upsample(ushort, ushort) __attribute__((overloadable));
uint2    upsample(ushort2, ushort2) __attribute__((overloadable));
uint3    upsample(ushort3, ushort3) __attribute__((overloadable));
uint4    upsample(ushort4, ushort4) __attribute__((overloadable));
uint8    upsample(ushort8, ushort8) __attribute__((overloadable));
uint16   upsample(ushort16, ushort16) __attribute__((overloadable));
long     upsample(int, uint) __attribute__((overloadable));
long2    upsample(int2, uint2) __attribute__((overloadable));
long3    upsample(int3, uint3) __attribute__((overloadable));
long4    upsample(int4, uint4) __attribute__((overloadable));
long8    upsample(int8, uint8) __attribute__((overloadable));
long16   upsample(int16, uint16) __attribute__((overloadable));
ulong    upsample(uint, uint) __attribute__((overloadable));
ulong2   upsample(uint2, uint2) __attribute__((overloadable));
ulong3   upsample(uint3, uint3) __attribute__((overloadable));
ulong4   upsample(uint4, uint4) __attribute__((overloadable));
ulong8   upsample(uint8, uint8) __attribute__((overloadable));
ulong16  upsample(uint16, uint16) __attribute__((overloadable));

char     popcount(char) __attribute__((overloadable));
char2    popcount(char2) __attribute__((overloadable));
char3    popcount(char3) __attribute__((overloadable));
char4    popcount(char4) __attribute__((overloadable));
char8    popcount(char8) __attribute__((overloadable));
char16   popcount(char16) __attribute__((overloadable));
short    popcount(short) __attribute__((overloadable));
short2   popcount(short2) __attribute__((overloadable));
short3   popcount(short3) __attribute__((overloadable));
short4   popcount(short4) __attribute__((overloadable));
short8   popcount(short8) __attribute__((overloadable));
short16  popcount(short16) __attribute__((overloadable));
int      popcount(int) __attribute__((overloadable));
int2     popcount(int2) __attribute__((overloadable));
int3     popcount(int3) __attribute__((overloadable));
int4     popcount(int4) __attribute__((overloadable));
int8     popcount(int8) __attribute__((overloadable));
int16    popcount(int16) __attribute__((overloadable));
long     popcount(long) __attribute__((overloadable));
long2    popcount(long2) __attribute__((overloadable));
long3    popcount(long3) __attribute__((overloadable));
long4    popcount(long4) __attribute__((overloadable));
long8    popcount(long8) __attribute__((overloadable));
long16   popcount(long16) __attribute__((overloadable));
uchar    popcount(uchar) __attribute__((overloadable));
uchar2   popcount(uchar2) __attribute__((overloadable));
uchar3   popcount(uchar3) __attribute__((overloadable));
uchar4   popcount(uchar4) __attribute__((overloadable));
uchar8   popcount(uchar8) __attribute__((overloadable));
uchar16  popcount(uchar16) __attribute__((overloadable));
ushort   popcount(ushort) __attribute__((overloadable));
ushort2  popcount(ushort2) __attribute__((overloadable));
ushort3  popcount(ushort3) __attribute__((overloadable));
ushort4  popcount(ushort4) __attribute__((overloadable));
ushort8  popcount(ushort8) __attribute__((overloadable));
ushort16 popcount(ushort16) __attribute__((overloadable));
uint     popcount(uint) __attribute__((overloadable));
uint2    popcount(uint2) __attribute__((overloadable));
uint3    popcount(uint3) __attribute__((overloadable));
uint4    popcount(uint4) __attribute__((overloadable));
uint8    popcount(uint8) __attribute__((overloadable));
uint16   popcount(uint16) __attribute__((overloadable));
ulong    popcount(ulong) __attribute__((overloadable));
ulong2   popcount(ulong2) __attribute__((overloadable));
ulong3   popcount(ulong3) __attribute__((overloadable));
ulong4   popcount(ulong4) __attribute__((overloadable));
ulong8   popcount(ulong8) __attribute__((overloadable));
ulong16  popcount(ulong16) __attribute__((overloadable));


/* Table 6.11 Fast Integer Built-in Functions */
int      mad24(int, int, int) __attribute__((overloadable));
int2     mad24(int2, int2, int2) __attribute__((overloadable));
int3     mad24(int3, int3, int3) __attribute__((overloadable));
int4     mad24(int4, int4, int4) __attribute__((overloadable));
int8     mad24(int8, int8, int8) __attribute__((overloadable));
int16    mad24(int16, int16, int16) __attribute__((overloadable));
uint     mad24(uint, uint, uint) __attribute__((overloadable));
uint2    mad24(uint2, uint2, uint2) __attribute__((overloadable));
uint3    mad24(uint3, uint3, uint3) __attribute__((overloadable));
uint4    mad24(uint4, uint4, uint4) __attribute__((overloadable));
uint8    mad24(uint8, uint8, uint8) __attribute__((overloadable));
uint16   mad24(uint16, uint16, uint16) __attribute__((overloadable));

int      mul24(int, int) __attribute__((overloadable));
int2     mul24(int2, int2) __attribute__((overloadable));
int3     mul24(int3, int3) __attribute__((overloadable));
int4     mul24(int4, int4) __attribute__((overloadable));
int8     mul24(int8, int8) __attribute__((overloadable));
int16    mul24(int16, int16) __attribute__((overloadable));
uint     mul24(uint, uint) __attribute__((overloadable));
uint2    mul24(uint2, uint2) __attribute__((overloadable));
uint3    mul24(uint3, uint3) __attribute__((overloadable));
uint4    mul24(uint4, uint4) __attribute__((overloadable));
uint8    mul24(uint8, uint8) __attribute__((overloadable));
uint16   mul24(uint16, uint16) __attribute__((overloadable));

#endif //__CL_BUILTINS_INTEGER_H__
